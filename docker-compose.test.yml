version: '3'

services:

    testldap:
      container_name: testldap
      image: docker.io/bitnami/openldap:2.5
      ports:
        - '1389:1389'
        - '1636:1636'
      environment:
        - LDAP_ROOT=dc=redhat,dc=com
        - LDAP_ADMIN_USERNAME=admin
        - LDAP_ADMIN_PASSWORD=adminpassword
        - BITNAMI_DEBUG=true
      volumes:
        - ${PWD}/etc/openldap:/ldifs:z
      # See "NOTE about healthchecks" in docker-compose.yml:
      # depends_on:
      #   osidb-data:
      #     condition: service_healthy

    testrunner:
      container_name: testrunner
      build:
        context: .
        dockerfile: test.Dockerfile
        args:
          RH_CERT_URL: ${RH_CERT_URL}
          PYPI_MIRROR: ${PIP_INDEX_URL}
      image: testrunner
      stdin_open: true
      tty: true
      depends_on: ["osidb-data"]
      # See "NOTE about healthchecks" in docker-compose.yml:
      # depends_on:
      #   osidb-data:
      #     condition: service_healthy
# #####################
# NOTE: we make no external calls with tests - below env vars in test environment are
#       used in capturing new vcr data cassettes
# #####################
      environment:
        BZIMPORT_BZ_API_KEY: ${BZIMPORT_BZ_API_KEY:?Variable BZIMPORT_BZ_API_KEY must be set.}
        BZIMPORT_BZ_URL: ${BZIMPORT_BZ_URL}
        ET_URL: ${ET_URL}
        HTTPS_TASKMAN_PROXY: ${HTTPS_TASKMAN_PROXY}
        JIRA_AUTH_TOKEN: ${JIRA_AUTH_TOKEN:?Variable JIRA_AUTH_TOKEN must be set.}
        JIRA_TASKMAN_PROJECT_KEY: ${JIRA_TASKMAN_PROJECT_KEY}
        JIRA_TASKMAN_URL: ${JIRA_TASKMAN_URL}
        JIRA_URL: ${JIRA_URL}
        OSIDB_CORS_ALLOWED_ORIGINS: ${OSIDB_CORS_ALLOWED_ORIGINS}
        OSIDB_CORS_ALLOW_HEADERS: ${OSIDB_CORS_ALLOW_HEADERS}
        PRODUCT_DEF_URL: ${PRODUCT_DEF_URL}
        PS_CONSTANTS_URL: ${PS_CONSTANTS_URL}
        SNIPPET_CREATION: ${SNIPPET_CREATION}
        SNIPPET_CREATION_START: ${SNIPPET_CREATION_START}
      volumes:
        - ${PWD}:/opt/app-root/src:z

    locust:
      container_name: locust
      image: docker.io/locustio/locust:2.20.1
      ports:
        - '9000:8089'
      volumes:
        - ${PWD}/perf/main.py:/mnt/locust/main.py:z
      command: -f /mnt/locust/main.py -H http://osidb-service:8000 --web-host 0.0.0.0 --modern-ui SFM2User SDEngineUser GriffonUser
