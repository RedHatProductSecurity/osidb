openapi: 3.0.3
info:
  title: OSIDB API
  version: 4.5.0
  description: REST API autogenerated docs for the OSIDB and its components
paths:
  /auth/token:
    get:
      operationId: auth_token_retrieve
      description: Takes a kerberos ticket and returns an access and refresh JWT pair.
      tags:
      - auth
      security:
      - KerberosAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  access:
                    type: string
                  dt:
                    type: string
                    format: date-time
                  env:
                    type: string
                  refresh:
                    type: string
                  revision:
                    type: string
                  version:
                    type: string
          description: ''
    post:
      operationId: auth_token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/TokenObtainPair'
                - type: object
                  properties:
                    dt:
                      type: string
                      format: date-time
                    env:
                      type: string
                    revision:
                      type: string
                    version:
                      type: string
          description: ''
  /auth/token/refresh:
    post:
      operationId: auth_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/TokenRefresh'
                - type: object
                  properties:
                    dt:
                      type: string
                      format: date-time
                    env:
                      type: string
                    revision:
                      type: string
                    version:
                      type: string
          description: ''
  /auth/token/verify:
    post:
      operationId: auth_token_verify_create
      description: |-
        Takes a token and indicates if it is valid.  This view provides no
        information about a token's fitness for a particular use.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenVerify'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/TokenVerify'
                - type: object
                  properties:
                    dt:
                      type: string
                      format: date-time
                    env:
                      type: string
                    revision:
                      type: string
                    version:
                      type: string
          description: ''
  /collectors/:
    get:
      operationId: collectors_retrieve
      description: index API endpoint listing available collector API endpoints
      tags:
      - collectors
      security:
      - OsidbTokenAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  dt:
                    type: string
                    format: date-time
                  env:
                    type: string
                  index:
                    type: array
                    items:
                      type: string
                  revision:
                    type: string
                  version:
                    type: string
          description: ''
  /collectors/api/v1/status:
    get:
      operationId: collectors_api_v1_status_retrieve
      description: get the overall status of all collectors and the collected data
      tags:
      - collectors
      security:
      - OsidbTokenAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  collectors:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          type: string
                          enum:
                          - EMPTY
                          - PARTIAL
                          - COMPLETE
                        depends_on:
                          type: array
                          items:
                            type: string
                        error:
                          type: object
                          nullable: true
                        is_complete:
                          type: boolean
                        is_up2date:
                          type: boolean
                        data_models:
                          type: array
                          items:
                            type: string
                        state:
                          type: string
                          enum:
                          - PENDING
                          - BLOCKED
                          - READY
                          - RUNNING
                        updated_until:
                          type: string
                          format: date-time
                  dt:
                    type: string
                    format: date-time
                  env:
                    type: string
                  revision:
                    type: string
                  version:
                    type: string
          description: ''
  /collectors/healthy:
    get:
      operationId: collectors_healthy_retrieve
      description: unauthenticated health check API endpoint
      tags:
      - collectors
      security:
      - OsidbTokenAuthentication: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  dt:
                    type: string
                    format: date-time
                  env:
                    type: string
                  revision:
                    type: string
                  version:
                    type: string
          description: ''
  /exploits/api/v1/collect:
    put:
      operationId: exploits_api_v1_collect_update
      description: |-
        API endpoint for re-collecting exploit data.

        **NOTE:** Currently for CISA data only, which is very small and collection is fast.
      tags:
      - exploits
      security:
      - OsidbTokenAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  dt:
                    type: string
                    format: date-time
                  env:
                    type: string
                  result_cisa:
                    type: string
                  revision:
                    type: string
                  version:
                    type: string
          description: ''
  /exploits/api/v1/cve_map:
    get:
      operationId: exploits_api_v1_cve_map_retrieve
      description: |-
        API endpoint for getting simple exploits information mapped to impacted CVEs.

        The Insights Vulnerability application needs this format.

        Format of results:
        ```
        {
          "page_size": <Number of CVEs on the page>,
          "cves": {
            "CVE-2222-0001": [<List of exploits>],
            "CVE-2222-0002": [<List of exploits>],
            ...
          },
        }
        ```
      tags:
      - exploits
      security:
      - OsidbTokenAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  cves:
                    type: object
                  dt:
                    type: string
                    format: date-time
                  env:
                    type: string
                  page_size:
                    type: integer
                  revision:
                    type: string
                  version:
                    type: string
          description: ''
  /exploits/api/v1/epss:
    get:
      operationId: exploits_api_v1_epss_list
      description: API endpoint for getting list of Red Hat relevant CVEs with their
        EPSS score.
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - exploits
      security:
      - OsidbTokenAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/PaginatedEPSSList'
                - type: object
                  properties:
                    dt:
                      type: string
                      format: date-time
                    env:
                      type: string
                    revision:
                      type: string
                    version:
                      type: string
          description: ''
  /exploits/api/v1/flaw_data:
    get:
      operationId: exploits_api_v1_flaw_data_list
      description: Flaw, affect, and tracker data for Exploits
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - exploits
      security:
      - OsidbTokenAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/PaginatedFlawReportDataList'
                - type: object
                  properties:
                    dt:
                      type: string
                      format: date-time
                    env:
                      type: string
                    revision:
                      type: string
                    version:
                      type: string
          description: ''
  /exploits/api/v1/report/date/{date}:
    get:
      operationId: exploits_api_v1_report_date_retrieve
      description: |-
        API endpoint for getting date based report for Incident Response.

        Format of results:
        ```
        {
          "cutoff_date": <Date>,
          "evaluated_cves": <Number of new CVEs with exploits>,
          "action_required": [<List of affects requiring action>],
          "no_action": [<List of CVEs not requiring action with reason>],
          "not_relevant": [<List of CVEs which are not in the database with reason>],
        }
        ```

        **NOTE:** No pagination is performed on this endpoint as data is limited by date and is expected
                  to be fairly small. Also, because data is broken into three categories it is not
                  exactly obvious how to create pages.
      parameters:
      - in: path
        name: date
        schema:
          type: string
          format: date
        description: 'Date format: YYYY-MM-DD'
        required: true
      tags:
      - exploits
      security:
      - OsidbTokenAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  action_required:
                    type: array
                    items:
                      type: object
                  cutoff_date:
                    type: string
                  dt:
                    type: string
                    format: date-time
                  env:
                    type: string
                  evaluated_cves:
                    type: integer
                  no_action:
                    type: array
                    items:
                      type: object
                  not_relevant:
                    type: array
                    items:
                      type: object
                  revision:
                    type: string
                  version:
                    type: string
          description: ''
  /exploits/api/v1/report/explanations:
    get:
      operationId: exploits_api_v1_report_explanations_retrieve
      description: |-
        API endpoint for getting a report of all CVEs with exploit and their status
        for Incident Response.

        Format of results:
        ```
        {
           "page_size": <Number of CVEs on the page>,
           "explanations": [<List of CVEs with exploit together with current status explanation>],
        }
        ```
      tags:
      - exploits
      security:
      - OsidbTokenAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  dt:
                    type: string
                    format: date-time
                  env:
                    type: string
                  explanations:
                    type: array
                    items:
                      type: object
                  page_size:
                    type: integer
                  revision:
                    type: string
                  version:
                    type: string
          description: ''
  /exploits/api/v1/report/pending:
    get:
      operationId: exploits_api_v1_report_pending_retrieve
      description: |-
        API endpoint for getting a report of pending actions for Incident Response.

        Format of results:
        ```
        {
          "pending_actions": [<List of affects requiring action>],
          "pending_actions_count": <Number of affects requiring action>,
        }
        ```

        **NOTE:** No pagination is performed on this endpoint as it is expected that the size of
                  the list of pending actions will be mostly stable. Also, the paging cannot be done on
                  the query level, as additional analysis of every exploit is required before a decision
                  to include it in this report is done.
      tags:
      - exploits
      security:
      - OsidbTokenAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  dt:
                    type: string
                    format: date-time
                  env:
                    type: string
                  pending_actions:
                    type: array
                    items:
                      type: object
                  pending_actions_count:
                    type: integer
                  revision:
                    type: string
                  version:
                    type: string
          description: ''
  /exploits/api/v1/report_data:
    get:
      operationId: exploits_api_v1_report_data_list
      description: Export only the data required to generate the exploits report
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - exploits
      security:
      - OsidbTokenAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/PaginatedExploitOnlyReportDataList'
                - type: object
                  properties:
                    dt:
                      type: string
                      format: date-time
                    env:
                      type: string
                    revision:
                      type: string
                    version:
                      type: string
          description: ''
  /exploits/api/v1/status:
    get:
      operationId: exploits_api_v1_status_retrieve
      description: |-
        API endpoint for getting basic information about exploits in the database.

        **NOTE:** Everyone is allowed to see basic information.
      tags:
      - exploits
      security:
      - OsidbTokenAuthentication: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  dt:
                    type: string
                    format: date-time
                  env:
                    type: string
                  exploits_count:
                    type: integer
                  exploits_count_relevant:
                    type: integer
                  last_exploit:
                    type: integer
                  revision:
                    type: string
                  version:
                    type: string
          description: ''
  /exploits/api/v1/supported-products:
    get:
      operationId: exploits_api_v1_supported_products_list
      description: API endpoint for getting a list of all supported products.
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - exploits
      security:
      - OsidbTokenAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/PaginatedSupportedProductsList'
                - type: object
                  properties:
                    dt:
                      type: string
                      format: date-time
                    env:
                      type: string
                    revision:
                      type: string
                    version:
                      type: string
          description: ''
  /osidb/api/v1/affects:
    get:
      operationId: osidb_api_v1_affects_list
      parameters:
      - in: query
        name: affectedness
        schema:
          type: string
          enum:
          - ''
          - AFFECTED
          - NEW
          - NOTAFFECTED
      - in: query
        name: created_dt
        schema:
          type: string
          format: date-time
      - in: query
        name: created_dt__date
        schema:
          type: string
          format: date
      - in: query
        name: created_dt__date__gte
        schema:
          type: string
          format: date
      - in: query
        name: created_dt__date__lte
        schema:
          type: string
          format: date
      - in: query
        name: created_dt__gt
        schema:
          type: string
          format: date-time
      - in: query
        name: created_dt__gte
        schema:
          type: string
          format: date-time
      - in: query
        name: created_dt__lt
        schema:
          type: string
          format: date-time
      - in: query
        name: created_dt__lte
        schema:
          type: string
          format: date-time
      - in: query
        name: cvss_scores__comment
        schema:
          type: string
      - in: query
        name: cvss_scores__created_dt
        schema:
          type: string
          format: date-time
      - in: query
        name: cvss_scores__created_dt__date
        schema:
          type: string
          format: date
      - in: query
        name: cvss_scores__created_dt__date__gte
        schema:
          type: string
          format: date
      - in: query
        name: cvss_scores__created_dt__date__lte
        schema:
          type: string
          format: date
      - in: query
        name: cvss_scores__created_dt__gt
        schema:
          type: string
          format: date-time
      - in: query
        name: cvss_scores__created_dt__gte
        schema:
          type: string
          format: date-time
      - in: query
        name: cvss_scores__created_dt__lt
        schema:
          type: string
          format: date-time
      - in: query
        name: cvss_scores__created_dt__lte
        schema:
          type: string
          format: date-time
      - in: query
        name: cvss_scores__cvss_version
        schema:
          type: string
      - in: query
        name: cvss_scores__issuer
        schema:
          type: string
          enum:
          - CVEORG
          - NIST
          - OSV
          - RH
      - in: query
        name: cvss_scores__score
        schema:
          type: number
          format: float
      - in: query
        name: cvss_scores__updated_dt
        schema:
          type: string
          format: date-time
      - in: query
        name: cvss_scores__updated_dt__date
        schema:
          type: string
          format: date
      - in: query
        name: cvss_scores__updated_dt__date__gte
        schema:
          type: string
          format: date
      - in: query
        name: cvss_scores__updated_dt__date__lte
        schema:
          type: string
          format: date
      - in: query
        name: cvss_scores__updated_dt__gt
        schema:
          type: string
          format: date-time
      - in: query
        name: cvss_scores__updated_dt__gte
        schema:
          type: string
          format: date-time
      - in: query
        name: cvss_scores__updated_dt__lt
        schema:
          type: string
          format: date-time
      - in: query
        name: cvss_scores__updated_dt__lte
        schema:
          type: string
          format: date-time
      - in: query
        name: cvss_scores__uuid
        schema:
          type: string
          format: uuid
      - in: query
        name: cvss_scores__vector
        schema:
          type: string
      - in: query
        name: embargoed
        schema:
          type: boolean
      - in: query
        name: exclude_fields
        schema:
          type: array
          items:
            type: string
        description: 'Exclude specified fields from the response. Multiple values
          may be separated by commas. Dot notation can be used to filter on related
          model fields. Example: `exclude_fields=field,related_model_field.field`'
      - in: query
        name: flaw__components
        schema:
          type: array
          items:
            type: string
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: flaw__created_dt
        schema:
          type: string
          format: date-time
      - in: query
        name: flaw__created_dt__date
        schema:
          type: string
          format: date
      - in: query
        name: flaw__created_dt__date__gte
        schema:
          type: string
          format: date
      - in: query
        name: flaw__created_dt__date__lte
        schema:
          type: string
          format: date
      - in: query
        name: flaw__created_dt__gt
        schema:
          type: string
          format: date-time
      - in: query
        name: flaw__created_dt__gte
        schema:
          type: string
          format: date-time
      - in: query
        name: flaw__created_dt__lt
        schema:
          type: string
          format: date-time
      - in: query
        name: flaw__created_dt__lte
        schema:
          type: string
          format: date-time
      - in: query
        name: flaw__cve_id
        schema:
          type: string
      - in: query
        name: flaw__cwe_id
        schema:
          type: string
      - in: query
        name: flaw__embargoed
        schema:
          type: boolean
      - in: query
        name: flaw__impact
        schema:
          type: string
          enum:
          - ''
          - CRITICAL
          - IMPORTANT
          - LOW
          - MODERATE
      - in: query
        name: flaw__reported_dt
        schema:
          type: string
          format: date-time
      - in: query
        name: flaw__reported_dt__date
        schema:
          type: string
          format: date
      - in: query
        name: flaw__reported_dt__date__gte
        schema:
          type: string
          format: date
      - in: query
        name: flaw__reported_dt__date__lte
        schema:
          type: string
          format: date
      - in: query
        name: flaw__reported_dt__gt
        schema:
          type: string
          format: date-time
      - in: query
        name: flaw__reported_dt__gte
        schema:
          type: string
          format: date-time
      - in: query
        name: flaw__reported_dt__lt
        schema:
          type: string
          format: date-time
      - in: query
        name: flaw__reported_dt__lte
        schema:
          type: string
          format: date-time
      - in: query
        name: flaw__source
        schema:
          type: string
          enum:
          - ''
          - ADOBE
          - APPLE
          - ASF
          - BIND
          - BK
          - BUGTRAQ
          - BUGZILLA
          - CERT
          - CERTIFI
          - CORELABS
          - CUSTOMER
          - CVE
          - CVEORG
          - DAILYDAVE
          - DEBIAN
          - DISTROS
          - FEDORA
          - FETCHMAIL
          - FREEDESKTOP
          - FREERADIUS
          - FRSIRT
          - FULLDISCLOSURE
          - GAIM
          - GENTOO
          - GENTOOBZ
          - GIT
          - GNOME
          - GNUPG
          - GOOGLE
          - HP
          - HW_VENDOR
          - IBM
          - IDEFENSE
          - INTERNET
          - ISC
          - ISEC
          - IT
          - JBOSS
          - JPCERT
          - KERNELBUGZILLA
          - KERNELSEC
          - LKML
          - LWN
          - MACROMEDIA
          - MAGEIA
          - MAILINGLIST
          - MILW0RM
          - MIT
          - MITRE
          - MOZILLA
          - MUTTDEV
          - NETDEV
          - NISCC
          - NVD
          - OCERT
          - OPENOFFICE
          - OPENSSL
          - OPENSUSE
          - ORACLE
          - OSS
          - OSSSECURITY
          - OSV
          - PHP
          - PIDGIN
          - POSTGRESQL
          - PRESS
          - REAL
          - REDHAT
          - RESEARCHER
          - RT
          - SAMBA
          - SECALERT
          - SECUNIA
          - SECURITYFOCUS
          - SKO
          - SQUID
          - SQUIRRELMAIL
          - SUN
          - SUNSOLVE
          - SUSE
          - TWITTER
          - UBUNTU
          - UPSTREAM
          - VENDORSEC
          - VULNWATCH
          - WIRESHARK
          - XCHAT
          - XEN
          - XPDF
      - in: query
        name: flaw__unembargo_dt
        schema:
          type: string
          format: date-time
      - in: query
        name: flaw__updated_dt
        schema:
          type: string
          format: date-time
      - in: query
        name: flaw__updated_dt__date
        schema:
          type: string
          format: date
      - in: query
        name: flaw__updated_dt__date__gte
        schema:
          type: string
          format: date
      - in: query
        name: flaw__updated_dt__date__lte
        schema:
          type: string
          format: date
      - in: query
        name: flaw__updated_dt__gt
        schema:
          type: string
          format: date-time
      - in: query
        name: flaw__updated_dt__gte
        schema:
          type: string
          format: date-time
      - in: query
        name: flaw__updated_dt__lt
        schema:
          type: string
          format: date-time
      - in: query
        name: flaw__updated_dt__lte
        schema:
          type: string
          format: date-time
      - in: query
        name: flaw__uuid
        schema:
          type: string
          format: uuid
      - in: query
        name: impact
        schema:
          type: string
          enum:
          - ''
          - CRITICAL
          - IMPORTANT
          - LOW
          - MODERATE
      - in: query
        name: include_fields
        schema:
          type: array
          items:
            type: string
        description: 'Include only specified fields in the response. Multiple values
          may be separated by commas. Dot notation can be used to filter on related
          model fields. Example: `include_fields=field,related_model_field.field`'
      - in: query
        name: include_meta_attr
        schema:
          type: array
          items:
            type: string
        description: 'Specify which keys from meta_attr field should be retrieved,
          multiple values may be separated by commas. Dot notation can be used to
          specify meta_attr keys on related models. Example: `include_meta_attr=key,related_model.key`Use
          wildcards eg. `include_meta_attr=*,related_model.*` for retrieving all the
          keys from meta_attr. Omit this parameter to not include meta_attr fields
          at all. '
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: order
        schema:
          type: array
          items:
            type: string
            enum:
            - -affectedness
            - -created_dt
            - -cvss_scores__comment
            - -cvss_scores__created_dt
            - -cvss_scores__cvss_version
            - -cvss_scores__issuer
            - -cvss_scores__score
            - -cvss_scores__updated_dt
            - -cvss_scores__uuid
            - -cvss_scores__vector
            - -embargoed
            - -flaw__components
            - -flaw__created_dt
            - -flaw__cve_id
            - -flaw__cwe_id
            - -flaw__embargoed
            - -flaw__impact
            - -flaw__reported_dt
            - -flaw__source
            - -flaw__unembargo_dt
            - -flaw__updated_dt
            - -flaw__uuid
            - -impact
            - -ps_component
            - -ps_module
            - -resolution
            - -trackers__created_dt
            - -trackers__embargoed
            - -trackers__external_system_id
            - -trackers__ps_update_stream
            - -trackers__resolution
            - -trackers__status
            - -trackers__type
            - -trackers__updated_dt
            - -trackers__uuid
            - -updated_dt
            - -uuid
            - affectedness
            - created_dt
            - cvss_scores__comment
            - cvss_scores__created_dt
            - cvss_scores__cvss_version
            - cvss_scores__issuer
            - cvss_scores__score
            - cvss_scores__updated_dt
            - cvss_scores__uuid
            - cvss_scores__vector
            - embargoed
            - flaw__components
            - flaw__created_dt
            - flaw__cve_id
            - flaw__cwe_id
            - flaw__embargoed
            - flaw__impact
            - flaw__reported_dt
            - flaw__source
            - flaw__unembargo_dt
            - flaw__updated_dt
            - flaw__uuid
            - impact
            - ps_component
            - ps_module
            - resolution
            - trackers__created_dt
            - trackers__embargoed
            - trackers__external_system_id
            - trackers__ps_update_stream
            - trackers__resolution
            - trackers__status
            - trackers__type
            - trackers__updated_dt
            - trackers__uuid
            - updated_dt
            - uuid
        description: |+
          Ordering

        explode: false
        style: form
      - in: query
        name: ps_component
        schema:
          type: string
      - in: query
        name: ps_module
        schema:
          type: string
      - in: query
        name: resolution
        schema:
          type: string
          enum:
          - ''
          - DEFER
          - DELEGATED
          - FIX
          - OOSS
          - WONTFIX
          - WONTREPORT
      - in: query
        name: trackers__created_dt
        schema:
          type: string
          format: date-time
      - in: query
        name: trackers__created_dt__date
        schema:
          type: string
          format: date
      - in: query
        name: trackers__created_dt__date__gte
        schema:
          type: string
          format: date
      - in: query
        name: trackers__created_dt__date__lte
        schema:
          type: string
          format: date
      - in: query
        name: trackers__created_dt__gt
        schema:
          type: string
          format: date-time
      - in: query
        name: trackers__created_dt__gte
        schema:
          type: string
          format: date-time
      - in: query
        name: trackers__created_dt__lt
        schema:
          type: string
          format: date-time
      - in: query
        name: trackers__created_dt__lte
        schema:
          type: string
          format: date-time
      - in: query
        name: trackers__embargoed
        schema:
          type: boolean
      - in: query
        name: trackers__external_system_id
        schema:
          type: string
      - in: query
        name: trackers__ps_update_stream
        schema:
          type: string
      - in: query
        name: trackers__resolution
        schema:
          type: string
      - in: query
        name: trackers__status
        schema:
          type: string
      - in: query
        name: trackers__type
        schema:
          type: string
          enum:
          - BUGZILLA
          - JIRA
      - in: query
        name: trackers__updated_dt
        schema:
          type: string
          format: date-time
      - in: query
        name: trackers__updated_dt__date
        schema:
          type: string
          format: date
      - in: query
        name: trackers__updated_dt__date__gte
        schema:
          type: string
          format: date
      - in: query
        name: trackers__updated_dt__date__lte
        schema:
          type: string
          format: date
      - in: query
        name: trackers__updated_dt__gt
        schema:
          type: string
          format: date-time
      - in: query
        name: trackers__updated_dt__gte
        schema:
          type: string
          format: date-time
      - in: query
        name: trackers__updated_dt__lt
        schema:
          type: string
          format: date-time
      - in: query
        name: trackers__updated_dt__lte
        schema:
          type: string
          format: date-time
      - in: query
        name: trackers__uuid
        schema:
          type: string
          format: uuid
      - in: query
        name: updated_dt
        schema:
          type: string
          format: date-time
      - in: query
        name: updated_dt__date
        schema:
          type: string
          format: date
      - in: query
        name: updated_dt__date__gte
        schema:
          type: string
          format: date
      - in: query
        name: updated_dt__date__lte
        schema:
          type: string
          format: date
      - in: query
        name: updated_dt__gt
        schema:
          type: string
          format: date-time
      - in: query
        name: updated_dt__gte
        schema:
          type: string
          format: date-time
      - in: query
        name: updated_dt__lt
        schema:
          type: string
          format: date-time
      - in: query
        name: updated_dt__lte
        schema:
          type: string
          format: date-time
      - in: query
        name: uuid
        schema:
          type: string
          format: uuid
      tags:
      - osidb
      security:
      - OsidbTokenAuthentication: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/PaginatedAffectList'
                - type: object
                  properties:
                    dt:
                      type: string
                      format: date-time
                    env:
                      type: string
                    revision:
                      type: string
                    version:
                      type: string
          description: ''
    post:
      operationId: osidb_api_v1_affects_create
      parameters:
      - in: header
        name: Bugzilla-Api-Key
        schema:
          type: string
        description: User generated api key for Bugzilla authentication.
        required: true
      - in: header
        name: Jira-Api-Key
        schema:
          type: string
        description: User generated api key for Jira authentication.
        required: true
      tags:
      - osidb
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AffectPost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AffectPost'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AffectPost'
        required: true
      security:
      - OsidbTokenAuthentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Affect'
                - type: object
                  properties:
                    dt:
                      type: string
                      format: date-time
                    env:
                      type: string
                    revision:
                      type: string
                    version:
                      type: string
          description: ''
  /osidb/api/v1/affects/{affect_id}/cvss_scores:
    get:
      operationId: osidb_api_v1_affects_cvss_scores_list
      parameters:
      - in: path
        name: affect_id
        schema:
          type: string
          format: uuid
        required: true
      - in: query
        name: comment
        schema:
          type: string
      - in: query
        name: created_dt
        schema:
          type: string
          format: date-time
      - in: query
        name: created_dt__date
        schema:
          type: string
          format: date
      - in: query
        name: created_dt__date__gte
        schema:
          type: string
          format: date
      - in: query
        name: created_dt__date__lte
        schema:
          type: string
          format: date
      - in: query
        name: created_dt__gt
        schema:
          type: string
          format: date-time
      - in: query
        name: created_dt__gte
        schema:
          type: string
          format: date-time
      - in: query
        name: created_dt__lt
        schema:
          type: string
          format: date-time
      - in: query
        name: created_dt__lte
        schema:
          type: string
          format: date-time
      - in: query
        name: cvss_version
        schema:
          type: string
      - in: query
        name: exclude_fields
        schema:
          type: array
          items:
            type: string
        description: 'Exclude specified fields from the response. Multiple values
          may be separated by commas. Dot notation can be used to filter on related
          model fields. Example: `exclude_fields=field,related_model_field.field`'
      - in: query
        name: include_fields
        schema:
          type: array
          items:
            type: string
        description: 'Include only specified fields in the response. Multiple values
          may be separated by commas. Dot notation can be used to filter on related
          model fields. Example: `include_fields=field,related_model_field.field`'
      - in: query
        name: issuer
        schema:
          type: string
          enum:
          - CVEORG
          - NIST
          - OSV
          - RH
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: score
        schema:
          type: number
          format: float
      - in: query
        name: updated_dt
        schema:
          type: string
          format: date-time
      - in: query
        name: updated_dt__date
        schema:
          type: string
          format: date
      - in: query
        name: updated_dt__date__gte
        schema:
          type: string
          format: date
      - in: query
        name: updated_dt__date__lte
        schema:
          type: string
          format: date
      - in: query
        name: updated_dt__gt
        schema:
          type: string
          format: date-time
      - in: query
        name: updated_dt__gte
        schema:
          type: string
          format: date-time
      - in: query
        name: updated_dt__lt
        schema:
          type: string
          format: date-time
      - in: query
        name: updated_dt__lte
        schema:
          type: string
          format: date-time
      - in: query
        name: uuid
        schema:
          type: string
          format: uuid
      - in: query
        name: vector
        schema:
          type: string
      tags:
      - osidb
      security:
      - OsidbTokenAuthentication: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/PaginatedAffectCVSSList'
                - type: object
                  properties:
                    dt:
                      type: string
                      format: date-time
                    env:
                      type: string
                    revision:
                      type: string
                    version:
                      type: string
          description: ''
    post:
      operationId: osidb_api_v1_affects_cvss_scores_create
      parameters:
      - in: header
        name: Bugzilla-Api-Key
        schema:
          type: string
        description: User generated api key for Bugzilla authentication.
        required: true
      - in: path
        name: affect_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - osidb
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AffectCVSSPost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AffectCVSSPost'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AffectCVSSPost'
        required: true
      security:
      - OsidbTokenAuthentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/AffectCVSS'
                - type: object
                  properties:
                    dt:
                      type: string
                      format: date-time
                    env:
                      type: string
                    revision:
                      type: string
                    version:
                      type: string
          description: ''
  /osidb/api/v1/affects/{affect_id}/cvss_scores/{id}:
    get:
      operationId: osidb_api_v1_affects_cvss_scores_retrieve
      parameters:
      - in: path
        name: affect_id
        schema:
          type: string
          format: uuid
        required: true
      - in: query
        name: exclude_fields
        schema:
          type: array
          items:
            type: string
        description: 'Exclude specified fields from the response. Multiple values
          may be separated by commas. Dot notation can be used to filter on related
          model fields. Example: `exclude_fields=field,related_model_field.field`'
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: query
        name: include_fields
        schema:
          type: array
          items:
            type: string
        description: 'Include only specified fields in the response. Multiple values
          may be separated by commas. Dot notation can be used to filter on related
          model fields. Example: `include_fields=field,related_model_field.field`'
      tags:
      - osidb
      security:
      - OsidbTokenAuthentication: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/AffectCVSS'
                - type: object
                  properties:
                    dt:
                      type: string
                      format: date-time
                    env:
                      type: string
                    revision:
                      type: string
                    version:
                      type: string
          description: ''
    put:
      operationId: osidb_api_v1_affects_cvss_scores_update
      parameters:
      - in: header
        name: Bugzilla-Api-Key
        schema:
          type: string
        description: User generated api key for Bugzilla authentication.
        required: true
      - in: path
        name: affect_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - osidb
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AffectCVSSPut'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AffectCVSSPut'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AffectCVSSPut'
        required: true
      security:
      - OsidbTokenAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/AffectCVSS'
                - type: object
                  properties:
                    dt:
                      type: string
                      format: date-time
                    env:
                      type: string
                    revision:
                      type: string
                    version:
                      type: string
          description: ''
    delete:
      operationId: osidb_api_v1_affects_cvss_scores_destroy
      description: Destroy the instance and proxy the delete to Bugzilla.
      parameters:
      - in: header
        name: Bugzilla-Api-Key
        schema:
          type: string
        description: User generated api key for Bugzilla authentication.
        required: true
      - in: path
        name: affect_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - osidb
      security:
      - OsidbTokenAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  dt:
                    type: string
                    format: date-time
                  env:
                    type: string
                  revision:
                    type: string
                  version:
                    type: string
          description: ''
  /osidb/api/v1/affects/{uuid}:
    get:
      operationId: osidb_api_v1_affects_retrieve
      parameters:
      - in: query
        name: exclude_fields
        schema:
          type: array
          items:
            type: string
        description: 'Exclude specified fields from the response. Multiple values
          may be separated by commas. Dot notation can be used to filter on related
          model fields. Example: `exclude_fields=field,related_model_field.field`'
      - in: query
        name: include_fields
        schema:
          type: array
          items:
            type: string
        description: 'Include only specified fields in the response. Multiple values
          may be separated by commas. Dot notation can be used to filter on related
          model fields. Example: `include_fields=field,related_model_field.field`'
      - in: query
        name: include_meta_attr
        schema:
          type: array
          items:
            type: string
        description: 'Specify which keys from meta_attr field should be retrieved,
          multiple values may be separated by commas. Dot notation can be used to
          specify meta_attr keys on related models. Example: `include_meta_attr=key,related_model.key`Use
          wildcards eg. `include_meta_attr=*,related_model.*` for retrieving all the
          keys from meta_attr. Omit this parameter to not include meta_attr fields
          at all. '
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Affect.
        required: true
      tags:
      - osidb
      security:
      - OsidbTokenAuthentication: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Affect'
                - type: object
                  properties:
                    dt:
                      type: string
                      format: date-time
                    env:
                      type: string
                    revision:
                      type: string
                    version:
                      type: string
          description: ''
    put:
      operationId: osidb_api_v1_affects_update
      parameters:
      - in: header
        name: Bugzilla-Api-Key
        schema:
          type: string
        description: User generated api key for Bugzilla authentication.
        required: true
      - in: header
        name: Jira-Api-Key
        schema:
          type: string
        description: User generated api key for Jira authentication.
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Affect.
        required: true
      tags:
      - osidb
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Affect'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Affect'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Affect'
        required: true
      security:
      - OsidbTokenAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Affect'
                - type: object
                  properties:
                    dt:
                      type: string
                      format: date-time
                    env:
                      type: string
                    revision:
                      type: string
                    version:
                      type: string
          description: ''
    delete:
      operationId: osidb_api_v1_affects_destroy
      description: Destroy the instance and proxy the delete to Bugzilla
      parameters:
      - in: header
        name: Bugzilla-Api-Key
        schema:
          type: string
        description: User generated api key for Bugzilla authentication.
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Affect.
        required: true
      tags:
      - osidb
      security:
      - OsidbTokenAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  dt:
                    type: string
                    format: date-time
                  env:
                    type: string
                  revision:
                    type: string
                  version:
                    type: string
          description: ''
  /osidb/api/v1/affects/bulk:
    post:
      operationId: osidb_api_v1_affects_bulk_create
      description: Bulk create endpoint. Expects a list of dict Affect objects.
      parameters:
      - in: header
        name: Bugzilla-Api-Key
        schema:
          type: string
        description: User generated api key for Bugzilla authentication.
        required: true
      tags:
      - osidb
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/AffectPost'
          application/x-www-form-urlencoded:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/AffectPost'
          multipart/form-data:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/AffectPost'
        required: true
      security:
      - OsidbTokenAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/AffectBulkPostPutResponse'
                - type: object
                  properties:
                    dt:
                      type: string
                      format: date-time
                    env:
                      type: string
                    revision:
                      type: string
                    version:
                      type: string
          description: ''
    put:
      operationId: osidb_api_v1_affects_bulk_update
      description: Bulk update endpoint. Expects a list of dict Affect objects.
      parameters:
      - in: header
        name: Bugzilla-Api-Key
        schema:
          type: string
        description: User generated api key for Bugzilla authentication.
        required: true
      - in: header
        name: Jira-Api-Key
        schema:
          type: string
        description: User generated api key for Jira authentication.
        required: true
      tags:
      - osidb
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/AffectBulkPut'
          application/x-www-form-urlencoded:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/AffectBulkPut'
          multipart/form-data:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/AffectBulkPut'
        required: true
      security:
      - OsidbTokenAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/AffectBulkPostPutResponse'
                - type: object
                  properties:
                    dt:
                      type: string
                      format: date-time
                    env:
                      type: string
                    revision:
                      type: string
                    version:
                      type: string
          description: ''
    delete:
      operationId: osidb_api_v1_affects_bulk_destroy
      description: Bulk delete endpoint. Expects a list of Affect uuids.
      parameters:
      - in: header
        name: Bugzilla-Api-Key
        schema:
          type: string
        description: User generated api key for Bugzilla authentication.
        required: true
      tags:
      - osidb
      security:
      - OsidbTokenAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  dt:
                    type: string
                    format: date-time
                  env:
                    type: string
                  revision:
                    type: string
                  version:
                    type: string
          description: ''
  /osidb/api/v1/alerts:
    get:
      operationId: osidb_api_v1_alerts_list
      description: List existing alerts for all models.
      parameters:
      - in: query
        name: alert_type
        schema:
          type: string
          enum:
          - ERROR
          - WARNING
      - in: query
        name: exclude_fields
        schema:
          type: array
          items:
            type: string
        description: 'Exclude specified fields from the response. Multiple values
          may be separated by commas. Dot notation can be used to filter on related
          model fields. Example: `exclude_fields=field,related_model_field.field`'
      - in: query
        name: include_fields
        schema:
          type: array
          items:
            type: string
        description: 'Include only specified fields in the response. Multiple values
          may be separated by commas. Dot notation can be used to filter on related
          model fields. Example: `include_fields=field,related_model_field.field`'
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
        description: Retrieve only Alerts with the specified name, which is given
          by the model's validation process.
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: parent_model
        schema:
          type: string
          enum:
          - affect
          - affectcvss
          - flaw
          - flawacknowledgment
          - flawcomment
          - flawcvss
          - flawreference
          - package
          - snippet
          - tracker
        description: Retrieve only Alerts related to the specified model, e.g. flaw
          or affect.
      - in: query
        name: parent_uuid
        schema:
          type: string
          format: uuid
        description: Retrieve only Alerts related to a model with the given UUID.
      - in: query
        name: uuid
        schema:
          type: string
          format: uuid
      tags:
      - osidb
      security:
      - OsidbTokenAuthentication: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/PaginatedAlertList'
                - type: object
                  properties:
                    dt:
                      type: string
                      format: date-time
                    env:
                      type: string
                    revision:
                      type: string
                    version:
                      type: string
          description: ''
  /osidb/api/v1/alerts/{uuid}:
    get:
      operationId: osidb_api_v1_alerts_retrieve
      parameters:
      - in: query
        name: exclude_fields
        schema:
          type: array
          items:
            type: string
        description: 'Exclude specified fields from the response. Multiple values
          may be separated by commas. Dot notation can be used to filter on related
          model fields. Example: `exclude_fields=field,related_model_field.field`'
      - in: query
        name: include_fields
        schema:
          type: array
          items:
            type: string
        description: 'Include only specified fields in the response. Multiple values
          may be separated by commas. Dot notation can be used to filter on related
          model fields. Example: `include_fields=field,related_model_field.field`'
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this alert.
        required: true
      tags:
      - osidb
      security:
      - OsidbTokenAuthentication: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Alert'
                - type: object
                  properties:
                    dt:
                      type: string
                      format: date-time
                    env:
                      type: string
                    revision:
                      type: string
                    version:
                      type: string
          description: ''
  /osidb/api/v1/audit:
    get:
      operationId: osidb_api_v1_audit_list
      description: basic view of audit history events
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: pgh_created_at
        schema:
          type: string
          format: date-time
      - in: query
        name: pgh_label
        schema:
          type: string
      - in: query
        name: pgh_obj_model
        schema:
          type: string
      - in: query
        name: pgh_slug
        schema:
          type: string
      tags:
      - osidb
      security:
      - OsidbTokenAuthentication: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/PaginatedAuditList'
                - type: object
                  properties:
                    dt:
                      type: string
                      format: date-time
                    env:
                      type: string
                    revision:
                      type: string
                    version:
                      type: string
          description: ''
  /osidb/api/v1/audit/{pgh_slug}:
    get:
      operationId: osidb_api_v1_audit_retrieve
      description: basic view of audit history events
      parameters:
      - in: path
        name: pgh_slug
        schema:
          type: string
          description: The unique identifier across all event tables.
        required: true
      tags:
      - osidb
      security:
      - OsidbTokenAuthentication: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Audit'
                - type: object
                  properties:
                    dt:
                      type: string
                      format: date-time
                    env:
                      type: string
                    revision:
                      type: string
                    version:
                      type: string
          description: ''
    put:
      operationId: osidb_api_v1_audit_update
      description: basic view of audit history events
      parameters:
      - in: path
        name: pgh_slug
        schema:
          type: string
          description: The unique identifier across all event tables.
        required: true
      tags:
      - osidb
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Audit'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Audit'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Audit'
        required: true
      security:
      - OsidbTokenAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Audit'
                - type: object
                  properties:
                    dt:
                      type: string
                      format: date-time
                    env:
                      type: string
                    revision:
                      type: string
                    version:
                      type: string
          description: ''
  /osidb/api/v1/flaws:
    get:
      operationId: osidb_api_v1_flaws_list
      parameters:
      - in: query
        name: acknowledgments__affiliation
        schema:
          type: string
      - in: query
        name: acknowledgments__created_dt
        schema:
          type: string
          format: date-time
      - in: query
        name: acknowledgments__created_dt__date
        schema:
          type: string
          format: date
      - in: query
        name: acknowledgments__created_dt__date__gte
        schema:
          type: string
          format: date
      - in: query
        name: acknowledgments__created_dt__date__lte
        schema:
          type: string
          format: date
      - in: query
        name: acknowledgments__created_dt__gt
        schema:
          type: string
          format: date-time
      - in: query
        name: acknowledgments__created_dt__gte
        schema:
          type: string
          format: date-time
      - in: query
        name: acknowledgments__created_dt__lt
        schema:
          type: string
          format: date-time
      - in: query
        name: acknowledgments__created_dt__lte
        schema:
          type: string
          format: date-time
      - in: query
        name: acknowledgments__from_upstream
        schema:
          type: boolean
      - in: query
        name: acknowledgments__name
        schema:
          type: string
      - in: query
        name: acknowledgments__updated_dt
        schema:
          type: string
          format: date-time
      - in: query
        name: acknowledgments__updated_dt__date
        schema:
          type: string
          format: date
      - in: query
        name: acknowledgments__updated_dt__date__gte
        schema:
          type: string
          format: date
      - in: query
        name: acknowledgments__updated_dt__date__lte
        schema:
          type: string
          format: date
      - in: query
        name: acknowledgments__updated_dt__gt
        schema:
          type: string
          format: date-time
      - in: query
        name: acknowledgments__updated_dt__gte
        schema:
          type: string
          format: date-time
      - in: query
        name: acknowledgments__updated_dt__lt
        schema:
          type: string
          format: date-time
      - in: query
        name: acknowledgments__updated_dt__lte
        schema:
          type: string
          format: date-time
      - in: query
        name: acknowledgments__uuid
        schema:
          type: string
          format: uuid
      - in: query
        name: affects__affectedness
        schema:
          type: string
          enum:
          - ''
          - AFFECTED
          - NEW
          - NOTAFFECTED
      - in: query
        name: affects__created_dt
        schema:
          type: string
          format: date-time
      - in: query
        name: affects__created_dt__date
        schema:
          type: string
          format: date
      - in: query
        name: affects__created_dt__date__gte
        schema:
          type: string
          format: date
      - in: query
        name: affects__created_dt__date__lte
        schema:
          type: string
          format: date
      - in: query
        name: affects__created_dt__gt
        schema:
          type: string
          format: date-time
      - in: query
        name: affects__created_dt__gte
        schema:
          type: string
          format: date-time
      - in: query
        name: affects__created_dt__lt
        schema:
          type: string
          format: date-time
      - in: query
        name: affects__created_dt__lte
        schema:
          type: string
          format: date-time
      - in: query
        name: affects__embargoed
        schema:
          type: boolean
      - in: query
        name: affects__impact
        schema:
          type: string
          enum:
          - ''
          - CRITICAL
          - IMPORTANT
          - LOW
          - MODERATE
      - in: query
        name: affects__ps_component
        schema:
          type: string
      - in: query
        name: affects__ps_module
        schema:
          type: string
      - in: query
        name: affects__resolution
        schema:
          type: string
          enum:
          - ''
          - DEFER
          - DELEGATED
          - FIX
          - OOSS
          - WONTFIX
          - WONTREPORT
      - in: query
        name: affects__trackers__created_dt
        schema:
          type: string
          format: date-time
      - in: query
        name: affects__trackers__created_dt__date
        schema:
          type: string
          format: date
      - in: query
        name: affects__trackers__created_dt__date__gte
        schema:
          type: string
          format: date
      - in: query
        name: affects__trackers__created_dt__date__lte
        schema:
          type: string
          format: date
      - in: query
        name: affects__trackers__created_dt__gt
        schema:
          type: string
          format: date-time
      - in: query
        name: affects__trackers__created_dt__gte
        schema:
          type: string
          format: date-time
      - in: query
        name: affects__trackers__created_dt__lt
        schema:
          type: string
          format: date-time
      - in: query
        name: affects__trackers__created_dt__lte
        schema:
          type: string
          format: date-time
      - in: query
        name: affects__trackers__embargoed
        schema:
          type: boolean
      - in: query
        name: affects__trackers__errata__advisory_name
        schema:
          type: string
      - in: query
        name: affects__trackers__errata__et_id
        schema:
          type: integer
      - in: query
        name: affects__trackers__errata__shipped_dt
        schema:
          type: string
          format: date-time
      - in: query
        name: affects__trackers__errata__shipped_dt__date
        schema:
          type: string
          format: date
      - in: query
        name: affects__trackers__errata__shipped_dt__date__gte
        schema:
          type: string
          format: date
      - in: query
        name: affects__trackers__errata__shipped_dt__date__lte
        schema:
          type: string
          format: date
      - in: query
        name: affects__trackers__errata__shipped_dt__gt
        schema:
          type: string
          format: date-time
      - in: query
        name: affects__trackers__errata__shipped_dt__gte
        schema:
          type: string
          format: date-time
      - in: query
        name: affects__trackers__errata__shipped_dt__lt
        schema:
          type: string
          format: date-time
      - in: query
        name: affects__trackers__errata__shipped_dt__lte
        schema:
          type: string
          format: date-time
      - in: query
        name: affects__trackers__external_system_id
        schema:
          type: string
      - in: query
        name: affects__trackers__ps_update_stream
        schema:
          type: string
      - in: query
        name: affects__trackers__resolution
        schema:
          type: string
      - in: query
        name: affects__trackers__status
        schema:
          type: string
      - in: query
        name: affects__trackers__type
        schema:
          type: string
          enum:
          - BUGZILLA
          - JIRA
      - in: query
        name: affects__trackers__updated_dt
        schema:
          type: string
          format: date-time
      - in: query
        name: affects__trackers__updated_dt__date
        schema:
          type: string
          format: date
      - in: query
        name: affects__trackers__updated_dt__date__gte
        schema:
          type: string
          format: date
      - in: query
        name: affects__trackers__updated_dt__date__lte
        schema:
          type: string
          format: date
      - in: query
        name: affects__trackers__updated_dt__gt
        schema:
          type: string
          format: date-time
      - in: query
        name: affects__trackers__updated_dt__gte
        schema:
          type: string
          format: date-time
      - in: query
        name: affects__trackers__updated_dt__lt
        schema:
          type: string
          format: date-time
      - in: query
        name: affects__trackers__updated_dt__lte
        schema:
          type: string
          format: date-time
      - in: query
        name: affects__trackers__uuid
        schema:
          type: string
          format: uuid
      - in: query
        name: affects__updated_dt
        schema:
          type: string
          format: date-time
      - in: query
        name: affects__updated_dt__date
        schema:
          type: string
          format: date
      - in: query
        name: affects__updated_dt__date__gte
        schema:
          type: string
          format: date
      - in: query
        name: affects__updated_dt__date__lte
        schema:
          type: string
          format: date
      - in: query
        name: affects__updated_dt__gt
        schema:
          type: string
          format: date-time
      - in: query
        name: affects__updated_dt__gte
        schema:
          type: string
          format: date-time
      - in: query
        name: affects__updated_dt__lt
        schema:
          type: string
          format: date-time
      - in: query
        name: affects__updated_dt__lte
        schema:
          type: string
          format: date-time
      - in: query
        name: affects__uuid
        schema:
          type: string
          format: uuid
      - in: query
        name: bz_id
        schema:
          type: number
      - in: query
        name: changed_after
        schema:
          type: string
          format: date-time
      - in: query
        name: changed_before
        schema:
          type: string
          format: date-time
      - in: query
        name: comment_zero
        schema:
          type: string
      - in: query
        name: components
        schema:
          type: array
          items:
            type: string
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: created_dt
        schema:
          type: string
          format: date-time
      - in: query
        name: created_dt__date
        schema:
          type: string
          format: date
      - in: query
        name: created_dt__date__gte
        schema:
          type: string
          format: date
      - in: query
        name: created_dt__date__lte
        schema:
          type: string
          format: date
      - in: query
        name: created_dt__gt
        schema:
          type: string
          format: date-time
      - in: query
        name: created_dt__gte
        schema:
          type: string
          format: date-time
      - in: query
        name: created_dt__lt
        schema:
          type: string
          format: date-time
      - in: query
        name: created_dt__lte
        schema:
          type: string
          format: date-time
      - in: query
        name: cve_description
        schema:
          type: string
      - in: query
        name: cve_description__isempty
        schema:
          type: boolean
      - in: query
        name: cve_id
        schema:
          type: array
          items:
            type: string
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: cve_id__isempty
        schema:
          type: boolean
      - in: query
        name: cvss2_nist__isempty
        schema:
          type: boolean
      - in: query
        name: cvss2_rh__isempty
        schema:
          type: boolean
      - in: query
        name: cvss3_nist__isempty
        schema:
          type: boolean
      - in: query
        name: cvss3_rh__isempty
        schema:
          type: boolean
      - in: query
        name: cvss4_nist__isempty
        schema:
          type: boolean
      - in: query
        name: cvss4_rh__isempty
        schema:
          type: boolean
      - in: query
        name: cvss_scores__comment
        schema:
          type: string
      - in: query
        name: cvss_scores__created_dt
        schema:
          type: string
          format: date-time
      - in: query
        name: cvss_scores__created_dt__date
        schema:
          type: string
          format: date
      - in: query
        name: cvss_scores__created_dt__date__gte
        schema:
          type: string
          format: date
      - in: query
        name: cvss_scores__created_dt__date__lte
        schema:
          type: string
          format: date
      - in: query
        name: cvss_scores__created_dt__gt
        schema:
          type: string
          format: date-time
      - in: query
        name: cvss_scores__created_dt__gte
        schema:
          type: string
          format: date-time
      - in: query
        name: cvss_scores__created_dt__lt
        schema:
          type: string
          format: date-time
      - in: query
        name: cvss_scores__created_dt__lte
        schema:
          type: string
          format: date-time
      - in: query
        name: cvss_scores__cvss_version
        schema:
          type: string
      - in: query
        name: cvss_scores__issuer
        schema:
          type: string
          enum:
          - CVEORG
          - NIST
          - OSV
          - RH
      - in: query
        name: cvss_scores__score
        schema:
          type: number
          format: float
      - in: query
        name: cvss_scores__updated_dt
        schema:
          type: string
          format: date-time
      - in: query
        name: cvss_scores__updated_dt__date
        schema:
          type: string
          format: date
      - in: query
        name: cvss_scores__updated_dt__date__gte
        schema:
          type: string
          format: date
      - in: query
        name: cvss_scores__updated_dt__date__lte
        schema:
          type: string
          format: date
      - in: query
        name: cvss_scores__updated_dt__gt
        schema:
          type: string
          format: date-time
      - in: query
        name: cvss_scores__updated_dt__gte
        schema:
          type: string
          format: date-time
      - in: query
        name: cvss_scores__updated_dt__lt
        schema:
          type: string
          format: date-time
      - in: query
        name: cvss_scores__updated_dt__lte
        schema:
          type: string
          format: date-time
      - in: query
        name: cvss_scores__uuid
        schema:
          type: string
          format: uuid
      - in: query
        name: cvss_scores__vector
        schema:
          type: string
      - in: query
        name: cwe_id
        schema:
          type: string
      - in: query
        name: cwe_id__isempty
        schema:
          type: boolean
      - in: query
        name: embargoed
        schema:
          type: boolean
      - in: query
        name: exclude_fields
        schema:
          type: array
          items:
            type: string
        description: 'Exclude specified fields from the response. Multiple values
          may be separated by commas. Dot notation can be used to filter on related
          model fields. Example: `exclude_fields=field,related_model_field.field`'
      - in: query
        name: impact
        schema:
          type: string
          enum:
          - ''
          - CRITICAL
          - IMPORTANT
          - LOW
          - MODERATE
      - in: query
        name: include_fields
        schema:
          type: array
          items:
            type: string
        description: 'Include only specified fields in the response. Multiple values
          may be separated by commas. Dot notation can be used to filter on related
          model fields. Example: `include_fields=field,related_model_field.field`'
      - in: query
        name: include_meta_attr
        schema:
          type: array
          items:
            type: string
        description: 'Specify which keys from meta_attr field should be retrieved,
          multiple values may be separated by commas. Dot notation can be used to
          specify meta_attr keys on related models. Example: `include_meta_attr=key,related_model.key`Use
          wildcards eg. `include_meta_attr=*,related_model.*` for retrieving all the
          keys from meta_attr. Omit this parameter to not include meta_attr fields
          at all. '
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: major_incident_start_dt
        schema:
          type: string
          format: date-time
      - in: query
        name: major_incident_start_dt__date
        schema:
          type: string
          format: date
      - in: query
        name: major_incident_start_dt__date__gte
        schema:
          type: string
          format: date
      - in: query
        name: major_incident_start_dt__date__lte
        schema:
          type: string
          format: date
      - in: query
        name: major_incident_start_dt__gt
        schema:
          type: string
          format: date-time
      - in: query
        name: major_incident_start_dt__gte
        schema:
          type: string
          format: date-time
      - in: query
        name: major_incident_start_dt__lt
        schema:
          type: string
          format: date-time
      - in: query
        name: major_incident_start_dt__lte
        schema:
          type: string
          format: date-time
      - in: query
        name: major_incident_state
        schema:
          type: string
          enum:
          - ''
          - APPROVED
          - CISA_APPROVED
          - INVALID
          - MINOR
          - REJECTED
          - REQUESTED
          - ZERO_DAY
      - in: query
        name: mitigation__isempty
        schema:
          type: boolean
      - in: query
        name: nist_cvss_validation
        schema:
          type: string
          enum:
          - ''
          - APPROVED
          - REJECTED
          - REQUESTED
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: order
        schema:
          type: array
          items:
            type: string
            enum:
            - -acknowledgments__affiliation
            - -acknowledgments__created_dt
            - -acknowledgments__from_upstream
            - -acknowledgments__name
            - -acknowledgments__updated_dt
            - -acknowledgments__uuid
            - -affects__affectedness
            - -affects__created_dt
            - -affects__impact
            - -affects__ps_component
            - -affects__ps_module
            - -affects__resolution
            - -affects__trackers__created_dt
            - -affects__trackers__errata__advisory_name
            - -affects__trackers__errata__et_id
            - -affects__trackers__errata__shipped_dt
            - -affects__trackers__external_system_id
            - -affects__trackers__ps_update_stream
            - -affects__trackers__resolution
            - -affects__trackers__status
            - -affects__trackers__type
            - -affects__trackers__updated_dt
            - -affects__trackers__uuid
            - -affects__updated_dt
            - -affects__uuid
            - -bz_id
            - -comment_zero
            - -components
            - -created_dt
            - -cve_description
            - -cve_id
            - -cvss_scores__comment
            - -cvss_scores__created_dt
            - -cvss_scores__issuer
            - -cvss_scores__score
            - -cvss_scores__updated_dt
            - -cvss_scores__uuid
            - -cvss_scores__vector
            - -cwe_id
            - -embargoed
            - -impact
            - -major_incident_start_dt
            - -major_incident_state
            - -nist_cvss_validation
            - -owner
            - -references__created_dt
            - -references__description
            - -references__type
            - -references__updated_dt
            - -references__url
            - -references__uuid
            - -reported_dt
            - -requires_cve_description
            - -source
            - -statement
            - -team_id
            - -title
            - -unembargo_dt
            - -updated_dt
            - -uuid
            - -workflow_state
            - acknowledgments__affiliation
            - acknowledgments__created_dt
            - acknowledgments__from_upstream
            - acknowledgments__name
            - acknowledgments__updated_dt
            - acknowledgments__uuid
            - affects__affectedness
            - affects__created_dt
            - affects__impact
            - affects__ps_component
            - affects__ps_module
            - affects__resolution
            - affects__trackers__created_dt
            - affects__trackers__errata__advisory_name
            - affects__trackers__errata__et_id
            - affects__trackers__errata__shipped_dt
            - affects__trackers__external_system_id
            - affects__trackers__ps_update_stream
            - affects__trackers__resolution
            - affects__trackers__status
            - affects__trackers__type
            - affects__trackers__updated_dt
            - affects__trackers__uuid
            - affects__updated_dt
            - affects__uuid
            - bz_id
            - comment_zero
            - components
            - created_dt
            - cve_description
            - cve_id
            - cvss_scores__comment
            - cvss_scores__created_dt
            - cvss_scores__issuer
            - cvss_scores__score
            - cvss_scores__updated_dt
            - cvss_scores__uuid
            - cvss_scores__vector
            - cwe_id
            - embargoed
            - impact
            - major_incident_start_dt
            - major_incident_state
            - nist_cvss_validation
            - owner
            - references__created_dt
            - references__description
            - references__type
            - references__updated_dt
            - references__url
            - references__uuid
            - reported_dt
            - requires_cve_description
            - source
            - statement
            - team_id
            - title
            - unembargo_dt
            - updated_dt
            - uuid
            - workflow_state
        description: |+
          Ordering

        explode: false
        style: form
      - in: query
        name: owner
        schema:
          type: string
      - in: query
        name: owner__isempty
        schema:
          type: boolean
      - in: query
        name: query
        schema:
          type: string
        description: Advanced filter with special syntax. See https://github.com/ivelum/djangoql
          for more information.
      - in: query
        name: references__created_dt
        schema:
          type: string
          format: date-time
      - in: query
        name: references__created_dt__date
        schema:
          type: string
          format: date
      - in: query
        name: references__created_dt__date__gte
        schema:
          type: string
          format: date
      - in: query
        name: references__created_dt__date__lte
        schema:
          type: string
          format: date
      - in: query
        name: references__created_dt__gt
        schema:
          type: string
          format: date-time
      - in: query
        name: references__created_dt__gte
        schema:
          type: string
          format: date-time
      - in: query
        name: references__created_dt__lt
        schema:
          type: string
          format: date-time
      - in: query
        name: references__created_dt__lte
        schema:
          type: string
          format: date-time
      - in: query
        name: references__description
        schema:
          type: string
      - in: query
        name: references__type
        schema:
          type: string
          enum:
          - ARTICLE
          - EXTERNAL
          - SOURCE
          - UPSTREAM
      - in: query
        name: references__updated_dt
        schema:
          type: string
          format: date-time
      - in: query
        name: references__updated_dt__date
        schema:
          type: string
          format: date
      - in: query
        name: references__updated_dt__date__gte
        schema:
          type: string
          format: date
      - in: query
        name: references__updated_dt__date__lte
        schema:
          type: string
          format: date
      - in: query
        name: references__updated_dt__gt
        schema:
          type: string
          format: date-time
      - in: query
        name: references__updated_dt__gte
        schema:
          type: string
          format: date-time
      - in: query
        name: references__updated_dt__lt
        schema:
          type: string
          format: date-time
      - in: query
        name: references__updated_dt__lte
        schema:
          type: string
          format: date-time
      - in: query
        name: references__url
        schema:
          type: string
      - in: query
        name: references__uuid
        schema:
          type: string
          format: uuid
      - in: query
        name: reported_dt
        schema:
          type: string
          format: date-time
      - in: query
        name: reported_dt__date
        schema:
          type: string
          format: date
      - in: query
        name: reported_dt__date__gte
        schema:
          type: string
          format: date
      - in: query
        name: reported_dt__date__lte
        schema:
          type: string
          format: date
      - in: query
        name: reported_dt__gt
        schema:
          type: string
          format: date-time
      - in: query
        name: reported_dt__gte
        schema:
          type: string
          format: date-time
      - in: query
        name: reported_dt__lt
        schema:
          type: string
          format: date-time
      - in: query
        name: reported_dt__lte
        schema:
          type: string
          format: date-time
      - in: query
        name: requires_cve_description
        schema:
          type: string
          enum:
          - ''
          - APPROVED
          - REJECTED
          - REQUESTED
      - in: query
        name: search
        schema:
          type: string
      - in: query
        name: source
        schema:
          type: string
          enum:
          - ''
          - ADOBE
          - APPLE
          - ASF
          - BIND
          - BK
          - BUGTRAQ
          - BUGZILLA
          - CERT
          - CERTIFI
          - CORELABS
          - CUSTOMER
          - CVE
          - CVEORG
          - DAILYDAVE
          - DEBIAN
          - DISTROS
          - FEDORA
          - FETCHMAIL
          - FREEDESKTOP
          - FREERADIUS
          - FRSIRT
          - FULLDISCLOSURE
          - GAIM
          - GENTOO
          - GENTOOBZ
          - GIT
          - GNOME
          - GNUPG
          - GOOGLE
          - HP
          - HW_VENDOR
          - IBM
          - IDEFENSE
          - INTERNET
          - ISC
          - ISEC
          - IT
          - JBOSS
          - JPCERT
          - KERNELBUGZILLA
          - KERNELSEC
          - LKML
          - LWN
          - MACROMEDIA
          - MAGEIA
          - MAILINGLIST
          - MILW0RM
          - MIT
          - MITRE
          - MOZILLA
          - MUTTDEV
          - NETDEV
          - NISCC
          - NVD
          - OCERT
          - OPENOFFICE
          - OPENSSL
          - OPENSUSE
          - ORACLE
          - OSS
          - OSSSECURITY
          - OSV
          - PHP
          - PIDGIN
          - POSTGRESQL
          - PRESS
          - REAL
          - REDHAT
          - RESEARCHER
          - RT
          - SAMBA
          - SECALERT
          - SECUNIA
          - SECURITYFOCUS
          - SKO
          - SQUID
          - SQUIRRELMAIL
          - SUN
          - SUNSOLVE
          - SUSE
          - TWITTER
          - UBUNTU
          - UPSTREAM
          - VENDORSEC
          - VULNWATCH
          - WIRESHARK
          - XCHAT
          - XEN
          - XPDF
      - in: query
        name: statement
        schema:
          type: string
      - in: query
        name: statement__isempty
        schema:
          type: boolean
      - in: query
        name: team_id
        schema:
          type: string
      - in: query
        name: title
        schema:
          type: string
      - in: query
        name: tracker_ids
        schema:
          type: array
          items:
            type: string
        description: Filter only Flaws which are related to specified Trackers (through
          Affects). Multiple tracker IDs may be separated by commas. Also only Affects
          that have the specified Trackers related will be shown.
      - in: query
        name: unembargo_dt
        schema:
          type: string
          format: date-time
      - in: query
        name: updated_dt
        schema:
          type: string
          format: date-time
      - in: query
        name: updated_dt__date
        schema:
          type: string
          format: date
      - in: query
        name: updated_dt__date__gte
        schema:
          type: string
          format: date
      - in: query
        name: updated_dt__date__lte
        schema:
          type: string
          format: date
      - in: query
        name: updated_dt__gt
        schema:
          type: string
          format: date-time
      - in: query
        name: updated_dt__gte
        schema:
          type: string
          format: date-time
      - in: query
        name: updated_dt__lt
        schema:
          type: string
          format: date-time
      - in: query
        name: updated_dt__lte
        schema:
          type: string
          format: date-time
      - in: query
        name: uuid
        schema:
          type: string
          format: uuid
      - in: query
        name: workflow_state
        schema:
          type: array
          items:
            type: string
            enum:
            - ''
            - DONE
            - NEW
            - PRE_SECONDARY_ASSESSMENT
            - REJECTED
            - SECONDARY_ASSESSMENT
            - TRIAGE
        description: |+
          Multiple values may be separated by commas.

        explode: false
        style: form
      tags:
      - osidb
      security:
      - OsidbTokenAuthentication: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/PaginatedFlawList'
                - type: object
                  properties:
                    dt:
                      type: string
                      format: date-time
                    env:
                      type: string
                    revision:
                      type: string
                    version:
                      type: string
          description: ''
    post:
      operationId: osidb_api_v1_flaws_create
      parameters:
      - in: header
        name: Bugzilla-Api-Key
        schema:
          type: string
        description: User generated api key for Bugzilla authentication.
        required: true
      - in: header
        name: Jira-Api-Key
        schema:
          type: string
        description: User generated api key for Jira authentication.
        required: true
      tags:
      - osidb
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlawPost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FlawPost'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FlawPost'
        required: true
      security:
      - OsidbTokenAuthentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Flaw'
                - type: object
                  properties:
                    dt:
                      type: string
                      format: date-time
                    env:
                      type: string
                    revision:
                      type: string
                    version:
                      type: string
          description: ''
  /osidb/api/v1/flaws/{flaw_id}/acknowledgments:
    get:
      operationId: osidb_api_v1_flaws_acknowledgments_list
      parameters:
      - in: query
        name: affiliation
        schema:
          type: string
      - in: query
        name: created_dt
        schema:
          type: string
          format: date-time
      - in: query
        name: created_dt__date
        schema:
          type: string
          format: date
      - in: query
        name: created_dt__date__gte
        schema:
          type: string
          format: date
      - in: query
        name: created_dt__date__lte
        schema:
          type: string
          format: date
      - in: query
        name: created_dt__gt
        schema:
          type: string
          format: date-time
      - in: query
        name: created_dt__gte
        schema:
          type: string
          format: date-time
      - in: query
        name: created_dt__lt
        schema:
          type: string
          format: date-time
      - in: query
        name: created_dt__lte
        schema:
          type: string
          format: date-time
      - in: query
        name: exclude_fields
        schema:
          type: array
          items:
            type: string
        description: 'Exclude specified fields from the response. Multiple values
          may be separated by commas. Dot notation can be used to filter on related
          model fields. Example: `exclude_fields=field,related_model_field.field`'
      - in: path
        name: flaw_id
        schema:
          type: string
          format: uuid
        required: true
      - in: query
        name: from_upstream
        schema:
          type: boolean
      - in: query
        name: include_fields
        schema:
          type: array
          items:
            type: string
        description: 'Include only specified fields in the response. Multiple values
          may be separated by commas. Dot notation can be used to filter on related
          model fields. Example: `include_fields=field,related_model_field.field`'
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: updated_dt
        schema:
          type: string
          format: date-time
      - in: query
        name: updated_dt__date
        schema:
          type: string
          format: date
      - in: query
        name: updated_dt__date__gte
        schema:
          type: string
          format: date
      - in: query
        name: updated_dt__date__lte
        schema:
          type: string
          format: date
      - in: query
        name: updated_dt__gt
        schema:
          type: string
          format: date-time
      - in: query
        name: updated_dt__gte
        schema:
          type: string
          format: date-time
      - in: query
        name: updated_dt__lt
        schema:
          type: string
          format: date-time
      - in: query
        name: updated_dt__lte
        schema:
          type: string
          format: date-time
      - in: query
        name: uuid
        schema:
          type: string
          format: uuid
      tags:
      - osidb
      security:
      - OsidbTokenAuthentication: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/PaginatedFlawAcknowledgmentList'
                - type: object
                  properties:
                    dt:
                      type: string
                      format: date-time
                    env:
                      type: string
                    revision:
                      type: string
                    version:
                      type: string
          description: ''
    post:
      operationId: osidb_api_v1_flaws_acknowledgments_create
      parameters:
      - in: header
        name: Bugzilla-Api-Key
        schema:
          type: string
        description: User generated api key for Bugzilla authentication.
        required: true
      - in: path
        name: flaw_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - osidb
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlawAcknowledgmentPost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FlawAcknowledgmentPost'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FlawAcknowledgmentPost'
        required: true
      security:
      - OsidbTokenAuthentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/FlawAcknowledgment'
                - type: object
                  properties:
                    dt:
                      type: string
                      format: date-time
                    env:
                      type: string
                    revision:
                      type: string
                    version:
                      type: string
          description: ''
  /osidb/api/v1/flaws/{flaw_id}/acknowledgments/{id}:
    get:
      operationId: osidb_api_v1_flaws_acknowledgments_retrieve
      parameters:
      - in: query
        name: exclude_fields
        schema:
          type: array
          items:
            type: string
        description: 'Exclude specified fields from the response. Multiple values
          may be separated by commas. Dot notation can be used to filter on related
          model fields. Example: `exclude_fields=field,related_model_field.field`'
      - in: path
        name: flaw_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: query
        name: include_fields
        schema:
          type: array
          items:
            type: string
        description: 'Include only specified fields in the response. Multiple values
          may be separated by commas. Dot notation can be used to filter on related
          model fields. Example: `include_fields=field,related_model_field.field`'
      tags:
      - osidb
      security:
      - OsidbTokenAuthentication: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/FlawAcknowledgment'
                - type: object
                  properties:
                    dt:
                      type: string
                      format: date-time
                    env:
                      type: string
                    revision:
                      type: string
                    version:
                      type: string
          description: ''
    put:
      operationId: osidb_api_v1_flaws_acknowledgments_update
      parameters:
      - in: header
        name: Bugzilla-Api-Key
        schema:
          type: string
        description: User generated api key for Bugzilla authentication.
        required: true
      - in: path
        name: flaw_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - osidb
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlawAcknowledgmentPut'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FlawAcknowledgmentPut'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FlawAcknowledgmentPut'
        required: true
      security:
      - OsidbTokenAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/FlawAcknowledgment'
                - type: object
                  properties:
                    dt:
                      type: string
                      format: date-time
                    env:
                      type: string
                    revision:
                      type: string
                    version:
                      type: string
          description: ''
    delete:
      operationId: osidb_api_v1_flaws_acknowledgments_destroy
      description: Destroy the instance and proxy the delete to Bugzilla
      parameters:
      - in: header
        name: Bugzilla-Api-Key
        schema:
          type: string
        description: User generated api key for Bugzilla authentication.
        required: true
      - in: path
        name: flaw_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - osidb
      security:
      - OsidbTokenAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  dt:
                    type: string
                    format: date-time
                  env:
                    type: string
                  revision:
                    type: string
                  version:
                    type: string
          description: ''
  /osidb/api/v1/flaws/{flaw_id}/comments:
    get:
      operationId: osidb_api_v1_flaws_comments_list
      description: List existing comments for a given flaw. Beware that freshly created
        comments are not guaranteed to keep their original UUIDs, especially if multiple
        comments are created simultaneously.
      parameters:
      - in: query
        name: creator
        schema:
          type: string
      - in: query
        name: exclude_fields
        schema:
          type: array
          items:
            type: string
        description: 'Exclude specified fields from the response. Multiple values
          may be separated by commas. Dot notation can be used to filter on related
          model fields. Example: `exclude_fields=field,related_model_field.field`'
      - in: query
        name: external_system_id
        schema:
          type: string
      - in: path
        name: flaw_id
        schema:
          type: string
        description: A string representing either the internal OSIDB UUID of the Flaw
          resource or the CVE number corresponding to a Flaw
        required: true
      - in: query
        name: include_fields
        schema:
          type: array
          items:
            type: string
        description: 'Include only specified fields in the response. Multiple values
          may be separated by commas. Dot notation can be used to filter on related
          model fields. Example: `include_fields=field,related_model_field.field`'
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: order
        schema:
          type: integer
        description: Retrieve only FlawComment resource with the specified order number.
          Regular flaw comments are numbered from 1 up.
      - in: query
        name: uuid
        schema:
          type: string
          format: uuid
      tags:
      - osidb
      security:
      - OsidbTokenAuthentication: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/PaginatedFlawCommentList'
                - type: object
                  properties:
                    dt:
                      type: string
                      format: date-time
                    env:
                      type: string
                    revision:
                      type: string
                    version:
                      type: string
          description: ''
    post:
      operationId: osidb_api_v1_flaws_comments_create
      description: Create a new comment for a given flaw. Beware that freshly created
        comments are not guaranteed to keep their original UUIDs, especially if multiple
        comments are created simultaneously.
      parameters:
      - in: header
        name: Bugzilla-Api-Key
        schema:
          type: string
        description: User generated api key for Bugzilla authentication.
        required: true
      - in: path
        name: flaw_id
        schema:
          type: string
        description: A string representing either the internal OSIDB UUID of the Flaw
          resource or the CVE number corresponding to a Flaw
        required: true
      tags:
      - osidb
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlawCommentPost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FlawCommentPost'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FlawCommentPost'
        required: true
      security:
      - OsidbTokenAuthentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/FlawComment'
                - type: object
                  properties:
                    dt:
                      type: string
                      format: date-time
                    env:
                      type: string
                    revision:
                      type: string
                    version:
                      type: string
          description: ''
  /osidb/api/v1/flaws/{flaw_id}/comments/{comment_id}:
    get:
      operationId: osidb_api_v1_flaws_comments_retrieve
      description: Retrieve a single existing comments for a given flaw. Beware that
        freshly created comments are not guaranteed to keep their original UUIDs,
        especially if multiple comments are created simultaneously.
      parameters:
      - in: path
        name: comment_id
        schema:
          type: string
        description: A string representing the internal OSIDB UUID of the FlawComment
          resource.
        required: true
      - in: query
        name: exclude_fields
        schema:
          type: array
          items:
            type: string
        description: 'Exclude specified fields from the response. Multiple values
          may be separated by commas. Dot notation can be used to filter on related
          model fields. Example: `exclude_fields=field,related_model_field.field`'
      - in: path
        name: flaw_id
        schema:
          type: string
        description: A string representing either the internal OSIDB UUID of the Flaw
          resource or the CVE number corresponding to a Flaw
        required: true
      - in: query
        name: include_fields
        schema:
          type: array
          items:
            type: string
        description: 'Include only specified fields in the response. Multiple values
          may be separated by commas. Dot notation can be used to filter on related
          model fields. Example: `include_fields=field,related_model_field.field`'
      tags:
      - osidb
      security:
      - OsidbTokenAuthentication: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/FlawComment'
                - type: object
                  properties:
                    dt:
                      type: string
                      format: date-time
                    env:
                      type: string
                    revision:
                      type: string
                    version:
                      type: string
          description: ''
  /osidb/api/v1/flaws/{flaw_id}/cvss_scores:
    get:
      operationId: osidb_api_v1_flaws_cvss_scores_list
      parameters:
      - in: query
        name: comment
        schema:
          type: string
      - in: query
        name: created_dt
        schema:
          type: string
          format: date-time
      - in: query
        name: created_dt__date
        schema:
          type: string
          format: date
      - in: query
        name: created_dt__date__gte
        schema:
          type: string
          format: date
      - in: query
        name: created_dt__date__lte
        schema:
          type: string
          format: date
      - in: query
        name: created_dt__gt
        schema:
          type: string
          format: date-time
      - in: query
        name: created_dt__gte
        schema:
          type: string
          format: date-time
      - in: query
        name: created_dt__lt
        schema:
          type: string
          format: date-time
      - in: query
        name: created_dt__lte
        schema:
          type: string
          format: date-time
      - in: query
        name: cvss_version
        schema:
          type: string
      - in: query
        name: exclude_fields
        schema:
          type: array
          items:
            type: string
        description: 'Exclude specified fields from the response. Multiple values
          may be separated by commas. Dot notation can be used to filter on related
          model fields. Example: `exclude_fields=field,related_model_field.field`'
      - in: path
        name: flaw_id
        schema:
          type: string
          format: uuid
        required: true
      - in: query
        name: include_fields
        schema:
          type: array
          items:
            type: string
        description: 'Include only specified fields in the response. Multiple values
          may be separated by commas. Dot notation can be used to filter on related
          model fields. Example: `include_fields=field,related_model_field.field`'
      - in: query
        name: issuer
        schema:
          type: string
          enum:
          - CVEORG
          - NIST
          - OSV
          - RH
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: score
        schema:
          type: number
          format: float
      - in: query
        name: updated_dt
        schema:
          type: string
          format: date-time
      - in: query
        name: updated_dt__date
        schema:
          type: string
          format: date
      - in: query
        name: updated_dt__date__gte
        schema:
          type: string
          format: date
      - in: query
        name: updated_dt__date__lte
        schema:
          type: string
          format: date
      - in: query
        name: updated_dt__gt
        schema:
          type: string
          format: date-time
      - in: query
        name: updated_dt__gte
        schema:
          type: string
          format: date-time
      - in: query
        name: updated_dt__lt
        schema:
          type: string
          format: date-time
      - in: query
        name: updated_dt__lte
        schema:
          type: string
          format: date-time
      - in: query
        name: uuid
        schema:
          type: string
          format: uuid
      - in: query
        name: vector
        schema:
          type: string
      tags:
      - osidb
      security:
      - OsidbTokenAuthentication: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/PaginatedFlawCVSSList'
                - type: object
                  properties:
                    dt:
                      type: string
                      format: date-time
                    env:
                      type: string
                    revision:
                      type: string
                    version:
                      type: string
          description: ''
    post:
      operationId: osidb_api_v1_flaws_cvss_scores_create
      parameters:
      - in: header
        name: Bugzilla-Api-Key
        schema:
          type: string
        description: User generated api key for Bugzilla authentication.
        required: true
      - in: path
        name: flaw_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - osidb
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlawCVSSPost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FlawCVSSPost'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FlawCVSSPost'
        required: true
      security:
      - OsidbTokenAuthentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/FlawCVSS'
                - type: object
                  properties:
                    dt:
                      type: string
                      format: date-time
                    env:
                      type: string
                    revision:
                      type: string
                    version:
                      type: string
          description: ''
  /osidb/api/v1/flaws/{flaw_id}/cvss_scores/{id}:
    get:
      operationId: osidb_api_v1_flaws_cvss_scores_retrieve
      parameters:
      - in: query
        name: exclude_fields
        schema:
          type: array
          items:
            type: string
        description: 'Exclude specified fields from the response. Multiple values
          may be separated by commas. Dot notation can be used to filter on related
          model fields. Example: `exclude_fields=field,related_model_field.field`'
      - in: path
        name: flaw_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: query
        name: include_fields
        schema:
          type: array
          items:
            type: string
        description: 'Include only specified fields in the response. Multiple values
          may be separated by commas. Dot notation can be used to filter on related
          model fields. Example: `include_fields=field,related_model_field.field`'
      tags:
      - osidb
      security:
      - OsidbTokenAuthentication: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/FlawCVSS'
                - type: object
                  properties:
                    dt:
                      type: string
                      format: date-time
                    env:
                      type: string
                    revision:
                      type: string
                    version:
                      type: string
          description: ''
    put:
      operationId: osidb_api_v1_flaws_cvss_scores_update
      parameters:
      - in: header
        name: Bugzilla-Api-Key
        schema:
          type: string
        description: User generated api key for Bugzilla authentication.
        required: true
      - in: path
        name: flaw_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - osidb
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlawCVSSPut'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FlawCVSSPut'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FlawCVSSPut'
        required: true
      security:
      - OsidbTokenAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/FlawCVSS'
                - type: object
                  properties:
                    dt:
                      type: string
                      format: date-time
                    env:
                      type: string
                    revision:
                      type: string
                    version:
                      type: string
          description: ''
    delete:
      operationId: osidb_api_v1_flaws_cvss_scores_destroy
      description: Destroy the instance and proxy the delete to Bugzilla
      parameters:
      - in: header
        name: Bugzilla-Api-Key
        schema:
          type: string
        description: User generated api key for Bugzilla authentication.
        required: true
      - in: path
        name: flaw_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - osidb
      security:
      - OsidbTokenAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  dt:
                    type: string
                    format: date-time
                  env:
                    type: string
                  revision:
                    type: string
                  version:
                    type: string
          description: ''
  /osidb/api/v1/flaws/{flaw_id}/package_versions:
    get:
      operationId: osidb_api_v1_flaws_package_versions_list
      parameters:
      - in: query
        name: created_dt
        schema:
          type: string
          format: date-time
      - in: query
        name: created_dt__date
        schema:
          type: string
          format: date
      - in: query
        name: created_dt__date__gte
        schema:
          type: string
          format: date
      - in: query
        name: created_dt__date__lte
        schema:
          type: string
          format: date
      - in: query
        name: created_dt__gt
        schema:
          type: string
          format: date-time
      - in: query
        name: created_dt__gte
        schema:
          type: string
          format: date-time
      - in: query
        name: created_dt__lt
        schema:
          type: string
          format: date-time
      - in: query
        name: created_dt__lte
        schema:
          type: string
          format: date-time
      - in: query
        name: exclude_fields
        schema:
          type: array
          items:
            type: string
        description: 'Exclude specified fields from the response. Multiple values
          may be separated by commas. Dot notation can be used to filter on related
          model fields. Example: `exclude_fields=field,related_model_field.field`'
      - in: path
        name: flaw_id
        schema:
          type: string
          format: uuid
        required: true
      - in: query
        name: include_fields
        schema:
          type: array
          items:
            type: string
        description: 'Include only specified fields in the response. Multiple values
          may be separated by commas. Dot notation can be used to filter on related
          model fields. Example: `include_fields=field,related_model_field.field`'
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: package
        schema:
          type: string
      - in: query
        name: updated_dt
        schema:
          type: string
          format: date-time
      - in: query
        name: updated_dt__date
        schema:
          type: string
          format: date
      - in: query
        name: updated_dt__date__gte
        schema:
          type: string
          format: date
      - in: query
        name: updated_dt__date__lte
        schema:
          type: string
          format: date
      - in: query
        name: updated_dt__gt
        schema:
          type: string
          format: date-time
      - in: query
        name: updated_dt__gte
        schema:
          type: string
          format: date-time
      - in: query
        name: updated_dt__lt
        schema:
          type: string
          format: date-time
      - in: query
        name: updated_dt__lte
        schema:
          type: string
          format: date-time
      - in: query
        name: uuid
        schema:
          type: string
          format: uuid
      - in: query
        name: versions__version
        schema:
          type: string
      tags:
      - osidb
      security:
      - OsidbTokenAuthentication: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/PaginatedFlawPackageVersionList'
                - type: object
                  properties:
                    dt:
                      type: string
                      format: date-time
                    env:
                      type: string
                    revision:
                      type: string
                    version:
                      type: string
          description: ''
    post:
      operationId: osidb_api_v1_flaws_package_versions_create
      parameters:
      - in: header
        name: Bugzilla-Api-Key
        schema:
          type: string
        description: User generated api key for Bugzilla authentication.
        required: true
      - in: path
        name: flaw_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - osidb
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlawPackageVersionPost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FlawPackageVersionPost'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FlawPackageVersionPost'
        required: true
      security:
      - OsidbTokenAuthentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/FlawPackageVersion'
                - type: object
                  properties:
                    dt:
                      type: string
                      format: date-time
                    env:
                      type: string
                    revision:
                      type: string
                    version:
                      type: string
          description: ''
  /osidb/api/v1/flaws/{flaw_id}/package_versions/{id}:
    get:
      operationId: osidb_api_v1_flaws_package_versions_retrieve
      parameters:
      - in: query
        name: exclude_fields
        schema:
          type: array
          items:
            type: string
        description: 'Exclude specified fields from the response. Multiple values
          may be separated by commas. Dot notation can be used to filter on related
          model fields. Example: `exclude_fields=field,related_model_field.field`'
      - in: path
        name: flaw_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: query
        name: include_fields
        schema:
          type: array
          items:
            type: string
        description: 'Include only specified fields in the response. Multiple values
          may be separated by commas. Dot notation can be used to filter on related
          model fields. Example: `include_fields=field,related_model_field.field`'
      tags:
      - osidb
      security:
      - OsidbTokenAuthentication: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/FlawPackageVersion'
                - type: object
                  properties:
                    dt:
                      type: string
                      format: date-time
                    env:
                      type: string
                    revision:
                      type: string
                    version:
                      type: string
          description: ''
    put:
      operationId: osidb_api_v1_flaws_package_versions_update
      parameters:
      - in: header
        name: Bugzilla-Api-Key
        schema:
          type: string
        description: User generated api key for Bugzilla authentication.
        required: true
      - in: path
        name: flaw_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - osidb
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlawPackageVersionPut'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FlawPackageVersionPut'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FlawPackageVersionPut'
        required: true
      security:
      - OsidbTokenAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/FlawPackageVersion'
                - type: object
                  properties:
                    dt:
                      type: string
                      format: date-time
                    env:
                      type: string
                    revision:
                      type: string
                    version:
                      type: string
          description: ''
    delete:
      operationId: osidb_api_v1_flaws_package_versions_destroy
      description: Destroy the instance and proxy the delete to Bugzilla
      parameters:
      - in: header
        name: Bugzilla-Api-Key
        schema:
          type: string
        description: User generated api key for Bugzilla authentication.
        required: true
      - in: path
        name: flaw_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - osidb
      security:
      - OsidbTokenAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  dt:
                    type: string
                    format: date-time
                  env:
                    type: string
                  revision:
                    type: string
                  version:
                    type: string
          description: ''
  /osidb/api/v1/flaws/{flaw_id}/promote:
    post:
      operationId: osidb_api_v1_flaws_promote_create
      description: |-
        workflow promotion API endpoint

        try to adjust workflow classification of flaw to the next state available
        return its workflow:state classification or errors if not possible to promote
      parameters:
      - in: header
        name: Bugzilla-Api-Key
        schema:
          type: string
        description: User generated api key for Bugzilla authentication.
        required: true
      - in: header
        name: Jira-Api-Key
        schema:
          type: string
        description: User generated api key for Jira authentication.
        required: true
      - in: path
        name: flaw_id
        schema:
          type: string
        required: true
      tags:
      - osidb
      security:
      - OsidbTokenAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  dt:
                    type: string
                    format: date-time
                  env:
                    type: string
                  revision:
                    type: string
                  version:
                    type: string
          description: ''
  /osidb/api/v1/flaws/{flaw_id}/references:
    get:
      operationId: osidb_api_v1_flaws_references_list
      parameters:
      - in: query
        name: created_dt
        schema:
          type: string
          format: date-time
      - in: query
        name: created_dt__date
        schema:
          type: string
          format: date
      - in: query
        name: created_dt__date__gte
        schema:
          type: string
          format: date
      - in: query
        name: created_dt__date__lte
        schema:
          type: string
          format: date
      - in: query
        name: created_dt__gt
        schema:
          type: string
          format: date-time
      - in: query
        name: created_dt__gte
        schema:
          type: string
          format: date-time
      - in: query
        name: created_dt__lt
        schema:
          type: string
          format: date-time
      - in: query
        name: created_dt__lte
        schema:
          type: string
          format: date-time
      - in: query
        name: description
        schema:
          type: string
      - in: query
        name: exclude_fields
        schema:
          type: array
          items:
            type: string
        description: 'Exclude specified fields from the response. Multiple values
          may be separated by commas. Dot notation can be used to filter on related
          model fields. Example: `exclude_fields=field,related_model_field.field`'
      - in: path
        name: flaw_id
        schema:
          type: string
          format: uuid
        required: true
      - in: query
        name: include_fields
        schema:
          type: array
          items:
            type: string
        description: 'Include only specified fields in the response. Multiple values
          may be separated by commas. Dot notation can be used to filter on related
          model fields. Example: `include_fields=field,related_model_field.field`'
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: type
        schema:
          type: string
          enum:
          - ARTICLE
          - EXTERNAL
          - SOURCE
          - UPSTREAM
      - in: query
        name: updated_dt
        schema:
          type: string
          format: date-time
      - in: query
        name: updated_dt__date
        schema:
          type: string
          format: date
      - in: query
        name: updated_dt__date__gte
        schema:
          type: string
          format: date
      - in: query
        name: updated_dt__date__lte
        schema:
          type: string
          format: date
      - in: query
        name: updated_dt__gt
        schema:
          type: string
          format: date-time
      - in: query
        name: updated_dt__gte
        schema:
          type: string
          format: date-time
      - in: query
        name: updated_dt__lt
        schema:
          type: string
          format: date-time
      - in: query
        name: updated_dt__lte
        schema:
          type: string
          format: date-time
      - in: query
        name: url
        schema:
          type: string
      - in: query
        name: uuid
        schema:
          type: string
          format: uuid
      tags:
      - osidb
      security:
      - OsidbTokenAuthentication: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/PaginatedFlawReferenceList'
                - type: object
                  properties:
                    dt:
                      type: string
                      format: date-time
                    env:
                      type: string
                    revision:
                      type: string
                    version:
                      type: string
          description: ''
    post:
      operationId: osidb_api_v1_flaws_references_create
      parameters:
      - in: header
        name: Bugzilla-Api-Key
        schema:
          type: string
        description: User generated api key for Bugzilla authentication.
        required: true
      - in: path
        name: flaw_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - osidb
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlawReferencePost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FlawReferencePost'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FlawReferencePost'
        required: true
      security:
      - OsidbTokenAuthentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/FlawReference'
                - type: object
                  properties:
                    dt:
                      type: string
                      format: date-time
                    env:
                      type: string
                    revision:
                      type: string
                    version:
                      type: string
          description: ''
  /osidb/api/v1/flaws/{flaw_id}/references/{id}:
    get:
      operationId: osidb_api_v1_flaws_references_retrieve
      parameters:
      - in: query
        name: exclude_fields
        schema:
          type: array
          items:
            type: string
        description: 'Exclude specified fields from the response. Multiple values
          may be separated by commas. Dot notation can be used to filter on related
          model fields. Example: `exclude_fields=field,related_model_field.field`'
      - in: path
        name: flaw_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: query
        name: include_fields
        schema:
          type: array
          items:
            type: string
        description: 'Include only specified fields in the response. Multiple values
          may be separated by commas. Dot notation can be used to filter on related
          model fields. Example: `include_fields=field,related_model_field.field`'
      tags:
      - osidb
      security:
      - OsidbTokenAuthentication: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/FlawReference'
                - type: object
                  properties:
                    dt:
                      type: string
                      format: date-time
                    env:
                      type: string
                    revision:
                      type: string
                    version:
                      type: string
          description: ''
    put:
      operationId: osidb_api_v1_flaws_references_update
      parameters:
      - in: header
        name: Bugzilla-Api-Key
        schema:
          type: string
        description: User generated api key for Bugzilla authentication.
        required: true
      - in: path
        name: flaw_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - osidb
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlawReferencePut'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FlawReferencePut'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FlawReferencePut'
        required: true
      security:
      - OsidbTokenAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/FlawReference'
                - type: object
                  properties:
                    dt:
                      type: string
                      format: date-time
                    env:
                      type: string
                    revision:
                      type: string
                    version:
                      type: string
          description: ''
    delete:
      operationId: osidb_api_v1_flaws_references_destroy
      description: Destroy the instance and proxy the delete to Bugzilla
      parameters:
      - in: header
        name: Bugzilla-Api-Key
        schema:
          type: string
        description: User generated api key for Bugzilla authentication.
        required: true
      - in: path
        name: flaw_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - osidb
      security:
      - OsidbTokenAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  dt:
                    type: string
                    format: date-time
                  env:
                    type: string
                  revision:
                    type: string
                  version:
                    type: string
          description: ''
  /osidb/api/v1/flaws/{flaw_id}/reject:
    post:
      operationId: osidb_api_v1_flaws_reject_create
      description: |-
        workflow promotion API endpoint

        try to reject a flaw / task
      parameters:
      - in: header
        name: Bugzilla-Api-Key
        schema:
          type: string
        description: User generated api key for Bugzilla authentication.
        required: true
      - in: header
        name: Jira-Api-Key
        schema:
          type: string
        description: User generated api key for Jira authentication.
        required: true
      - in: path
        name: flaw_id
        schema:
          type: string
        required: true
      tags:
      - osidb
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Reject'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Reject'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Reject'
        required: true
      security:
      - OsidbTokenAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  dt:
                    type: string
                    format: date-time
                  env:
                    type: string
                  revision:
                    type: string
                  version:
                    type: string
          description: ''
  /osidb/api/v1/flaws/{id}:
    get:
      operationId: osidb_api_v1_flaws_retrieve
      parameters:
      - in: query
        name: exclude_fields
        schema:
          type: array
          items:
            type: string
        description: 'Exclude specified fields from the response. Multiple values
          may be separated by commas. Dot notation can be used to filter on related
          model fields. Example: `exclude_fields=field,related_model_field.field`'
      - in: path
        name: id
        schema:
          type: string
        description: A string representing either the internal OSIDB UUID of the Flaw
          resource or the CVE number corresponding to a Flaw
        required: true
      - in: query
        name: include_fields
        schema:
          type: array
          items:
            type: string
        description: 'Include only specified fields in the response. Multiple values
          may be separated by commas. Dot notation can be used to filter on related
          model fields. Example: `include_fields=field,related_model_field.field`'
      - in: query
        name: include_meta_attr
        schema:
          type: array
          items:
            type: string
        description: 'Specify which keys from meta_attr field should be retrieved,
          multiple values may be separated by commas. Dot notation can be used to
          specify meta_attr keys on related models. Example: `include_meta_attr=key,related_model.key`Use
          wildcards eg. `include_meta_attr=*,related_model.*` for retrieving all the
          keys from meta_attr. Omit this parameter to not include meta_attr fields
          at all. '
      - in: query
        name: query
        schema:
          type: string
        description: Advanced filter with special syntax. See https://github.com/ivelum/djangoql
          for more information.
      - in: query
        name: tracker_ids
        schema:
          type: array
          items:
            type: string
        description: Filter only Flaws which are related to specified Trackers (through
          Affects). Multiple tracker IDs may be separated by commas. Also only Affects
          that have the specified Trackers related will be shown.
      tags:
      - osidb
      security:
      - OsidbTokenAuthentication: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Flaw'
                - type: object
                  properties:
                    dt:
                      type: string
                      format: date-time
                    env:
                      type: string
                    revision:
                      type: string
                    version:
                      type: string
          description: ''
    put:
      operationId: osidb_api_v1_flaws_update
      parameters:
      - in: header
        name: Bugzilla-Api-Key
        schema:
          type: string
        description: User generated api key for Bugzilla authentication.
        required: true
      - in: header
        name: Jira-Api-Key
        schema:
          type: string
        description: User generated api key for Jira authentication.
        required: true
      - in: query
        name: create_jira_task
        schema:
          type: boolean
        description: If set to true, it will trigger the creation of a Jira task if
          the flaw doesn't already have one associated.
      - in: path
        name: id
        schema:
          type: string
        description: A string representing either the internal OSIDB UUID of the Flaw
          resource or the CVE number corresponding to a Flaw
        required: true
      tags:
      - osidb
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Flaw'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Flaw'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Flaw'
        required: true
      security:
      - OsidbTokenAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Flaw'
                - type: object
                  properties:
                    dt:
                      type: string
                      format: date-time
                    env:
                      type: string
                    revision:
                      type: string
                    version:
                      type: string
          description: ''
  /osidb/api/v1/manifest:
    get:
      operationId: osidb_api_v1_manifest_retrieve
      description: HTTP get /manifest
      tags:
      - osidb
      security:
      - OsidbTokenAuthentication: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  dt:
                    type: string
                    format: date-time
                  env:
                    type: string
                  revision:
                    type: string
                  version:
                    type: string
          description: ''
  /osidb/api/v1/schema/:
    get:
      operationId: osidb_api_v1_schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - osidb
      security:
      - KerberosAuthentication: []
      - OsidbTokenAuthentication: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
                properties:
                  dt:
                    type: string
                    format: date-time
                  env:
                    type: string
                  revision:
                    type: string
                  version:
                    type: string
          description: ''
  /osidb/api/v1/status:
    get:
      operationId: osidb_api_v1_status_retrieve
      description: HTTP get /status
      tags:
      - osidb
      security:
      - OsidbTokenAuthentication: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  dt:
                    type: string
                    format: date-time
                  env:
                    type: string
                  osidb_data:
                    type: object
                    properties:
                      flaw_count:
                        type: integer
                  osidb_service:
                    type: object
                  revision:
                    type: string
                  version:
                    type: string
          description: ''
  /osidb/api/v1/trackers:
    get:
      operationId: osidb_api_v1_trackers_list
      parameters:
      - in: query
        name: affects__affectedness
        schema:
          type: string
          enum:
          - ''
          - AFFECTED
          - NEW
          - NOTAFFECTED
      - in: query
        name: affects__created_dt
        schema:
          type: string
          format: date-time
      - in: query
        name: affects__created_dt__date
        schema:
          type: string
          format: date
      - in: query
        name: affects__created_dt__date__gte
        schema:
          type: string
          format: date
      - in: query
        name: affects__created_dt__date__lte
        schema:
          type: string
          format: date
      - in: query
        name: affects__created_dt__gt
        schema:
          type: string
          format: date-time
      - in: query
        name: affects__created_dt__gte
        schema:
          type: string
          format: date-time
      - in: query
        name: affects__created_dt__lt
        schema:
          type: string
          format: date-time
      - in: query
        name: affects__created_dt__lte
        schema:
          type: string
          format: date-time
      - in: query
        name: affects__embargoed
        schema:
          type: boolean
      - in: query
        name: affects__flaw__components
        schema:
          type: array
          items:
            type: string
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: affects__flaw__created_dt
        schema:
          type: string
          format: date-time
      - in: query
        name: affects__flaw__created_dt__date
        schema:
          type: string
          format: date
      - in: query
        name: affects__flaw__created_dt__date__gte
        schema:
          type: string
          format: date
      - in: query
        name: affects__flaw__created_dt__date__lte
        schema:
          type: string
          format: date
      - in: query
        name: affects__flaw__created_dt__gt
        schema:
          type: string
          format: date-time
      - in: query
        name: affects__flaw__created_dt__gte
        schema:
          type: string
          format: date-time
      - in: query
        name: affects__flaw__created_dt__lt
        schema:
          type: string
          format: date-time
      - in: query
        name: affects__flaw__created_dt__lte
        schema:
          type: string
          format: date-time
      - in: query
        name: affects__flaw__cve_id
        schema:
          type: string
      - in: query
        name: affects__flaw__cwe_id
        schema:
          type: string
      - in: query
        name: affects__flaw__embargoed
        schema:
          type: boolean
      - in: query
        name: affects__flaw__impact
        schema:
          type: string
          enum:
          - ''
          - CRITICAL
          - IMPORTANT
          - LOW
          - MODERATE
      - in: query
        name: affects__flaw__reported_dt
        schema:
          type: string
          format: date-time
      - in: query
        name: affects__flaw__reported_dt__date
        schema:
          type: string
          format: date
      - in: query
        name: affects__flaw__reported_dt__date__gte
        schema:
          type: string
          format: date
      - in: query
        name: affects__flaw__reported_dt__date__lte
        schema:
          type: string
          format: date
      - in: query
        name: affects__flaw__reported_dt__gt
        schema:
          type: string
          format: date-time
      - in: query
        name: affects__flaw__reported_dt__gte
        schema:
          type: string
          format: date-time
      - in: query
        name: affects__flaw__reported_dt__lt
        schema:
          type: string
          format: date-time
      - in: query
        name: affects__flaw__reported_dt__lte
        schema:
          type: string
          format: date-time
      - in: query
        name: affects__flaw__source
        schema:
          type: string
          enum:
          - ''
          - ADOBE
          - APPLE
          - ASF
          - BIND
          - BK
          - BUGTRAQ
          - BUGZILLA
          - CERT
          - CERTIFI
          - CORELABS
          - CUSTOMER
          - CVE
          - CVEORG
          - DAILYDAVE
          - DEBIAN
          - DISTROS
          - FEDORA
          - FETCHMAIL
          - FREEDESKTOP
          - FREERADIUS
          - FRSIRT
          - FULLDISCLOSURE
          - GAIM
          - GENTOO
          - GENTOOBZ
          - GIT
          - GNOME
          - GNUPG
          - GOOGLE
          - HP
          - HW_VENDOR
          - IBM
          - IDEFENSE
          - INTERNET
          - ISC
          - ISEC
          - IT
          - JBOSS
          - JPCERT
          - KERNELBUGZILLA
          - KERNELSEC
          - LKML
          - LWN
          - MACROMEDIA
          - MAGEIA
          - MAILINGLIST
          - MILW0RM
          - MIT
          - MITRE
          - MOZILLA
          - MUTTDEV
          - NETDEV
          - NISCC
          - NVD
          - OCERT
          - OPENOFFICE
          - OPENSSL
          - OPENSUSE
          - ORACLE
          - OSS
          - OSSSECURITY
          - OSV
          - PHP
          - PIDGIN
          - POSTGRESQL
          - PRESS
          - REAL
          - REDHAT
          - RESEARCHER
          - RT
          - SAMBA
          - SECALERT
          - SECUNIA
          - SECURITYFOCUS
          - SKO
          - SQUID
          - SQUIRRELMAIL
          - SUN
          - SUNSOLVE
          - SUSE
          - TWITTER
          - UBUNTU
          - UPSTREAM
          - VENDORSEC
          - VULNWATCH
          - WIRESHARK
          - XCHAT
          - XEN
          - XPDF
      - in: query
        name: affects__flaw__unembargo_dt
        schema:
          type: string
          format: date-time
      - in: query
        name: affects__flaw__updated_dt
        schema:
          type: string
          format: date-time
      - in: query
        name: affects__flaw__updated_dt__date
        schema:
          type: string
          format: date
      - in: query
        name: affects__flaw__updated_dt__date__gte
        schema:
          type: string
          format: date
      - in: query
        name: affects__flaw__updated_dt__date__lte
        schema:
          type: string
          format: date
      - in: query
        name: affects__flaw__updated_dt__gt
        schema:
          type: string
          format: date-time
      - in: query
        name: affects__flaw__updated_dt__gte
        schema:
          type: string
          format: date-time
      - in: query
        name: affects__flaw__updated_dt__lt
        schema:
          type: string
          format: date-time
      - in: query
        name: affects__flaw__updated_dt__lte
        schema:
          type: string
          format: date-time
      - in: query
        name: affects__flaw__uuid
        schema:
          type: string
          format: uuid
      - in: query
        name: affects__impact
        schema:
          type: string
          enum:
          - ''
          - CRITICAL
          - IMPORTANT
          - LOW
          - MODERATE
      - in: query
        name: affects__ps_component
        schema:
          type: string
      - in: query
        name: affects__ps_module
        schema:
          type: string
      - in: query
        name: affects__resolution
        schema:
          type: string
          enum:
          - ''
          - DEFER
          - DELEGATED
          - FIX
          - OOSS
          - WONTFIX
          - WONTREPORT
      - in: query
        name: affects__updated_dt
        schema:
          type: string
          format: date-time
      - in: query
        name: affects__updated_dt__date
        schema:
          type: string
          format: date
      - in: query
        name: affects__updated_dt__date__gte
        schema:
          type: string
          format: date
      - in: query
        name: affects__updated_dt__date__lte
        schema:
          type: string
          format: date
      - in: query
        name: affects__updated_dt__gt
        schema:
          type: string
          format: date-time
      - in: query
        name: affects__updated_dt__gte
        schema:
          type: string
          format: date-time
      - in: query
        name: affects__updated_dt__lt
        schema:
          type: string
          format: date-time
      - in: query
        name: affects__updated_dt__lte
        schema:
          type: string
          format: date-time
      - in: query
        name: affects__uuid
        schema:
          type: string
          format: uuid
      - in: query
        name: created_dt
        schema:
          type: string
          format: date-time
      - in: query
        name: created_dt__date
        schema:
          type: string
          format: date
      - in: query
        name: created_dt__date__gte
        schema:
          type: string
          format: date
      - in: query
        name: created_dt__date__lte
        schema:
          type: string
          format: date
      - in: query
        name: created_dt__gt
        schema:
          type: string
          format: date-time
      - in: query
        name: created_dt__gte
        schema:
          type: string
          format: date-time
      - in: query
        name: created_dt__lt
        schema:
          type: string
          format: date-time
      - in: query
        name: created_dt__lte
        schema:
          type: string
          format: date-time
      - in: query
        name: embargoed
        schema:
          type: boolean
      - in: query
        name: exclude_fields
        schema:
          type: array
          items:
            type: string
        description: 'Exclude specified fields from the response. Multiple values
          may be separated by commas. Dot notation can be used to filter on related
          model fields. Example: `exclude_fields=field,related_model_field.field`'
      - in: query
        name: external_system_id
        schema:
          type: string
      - in: query
        name: include_fields
        schema:
          type: array
          items:
            type: string
        description: 'Include only specified fields in the response. Multiple values
          may be separated by commas. Dot notation can be used to filter on related
          model fields. Example: `include_fields=field,related_model_field.field`'
      - in: query
        name: include_meta_attr
        schema:
          type: array
          items:
            type: string
        description: 'Specify which keys from meta_attr field should be retrieved,
          multiple values may be separated by commas. Dot notation can be used to
          specify meta_attr keys on related models. Example: `include_meta_attr=key,related_model.key`Use
          wildcards eg. `include_meta_attr=*,related_model.*` for retrieving all the
          keys from meta_attr. Omit this parameter to not include meta_attr fields
          at all. '
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: order
        schema:
          type: array
          items:
            type: string
            enum:
            - -affects__affectedness
            - -affects__created_dt
            - -affects__embargoed
            - -affects__flaw__components
            - -affects__flaw__created_dt
            - -affects__flaw__cve_id
            - -affects__flaw__cwe_id
            - -affects__flaw__embargoed
            - -affects__flaw__impact
            - -affects__flaw__reported_dt
            - -affects__flaw__source
            - -affects__flaw__unembargo_dt
            - -affects__flaw__updated_dt
            - -affects__flaw__uuid
            - -affects__impact
            - -affects__ps_component
            - -affects__ps_module
            - -affects__resolution
            - -affects__updated_dt
            - -affects__uuid
            - -created_dt
            - -embargoed
            - -external_system_id
            - -ps_update_stream
            - -resolution
            - -status
            - -type
            - -updated_dt
            - -uuid
            - affects__affectedness
            - affects__created_dt
            - affects__embargoed
            - affects__flaw__components
            - affects__flaw__created_dt
            - affects__flaw__cve_id
            - affects__flaw__cwe_id
            - affects__flaw__embargoed
            - affects__flaw__impact
            - affects__flaw__reported_dt
            - affects__flaw__source
            - affects__flaw__unembargo_dt
            - affects__flaw__updated_dt
            - affects__flaw__uuid
            - affects__impact
            - affects__ps_component
            - affects__ps_module
            - affects__resolution
            - affects__updated_dt
            - affects__uuid
            - created_dt
            - embargoed
            - external_system_id
            - ps_update_stream
            - resolution
            - status
            - type
            - updated_dt
            - uuid
        description: |+
          Ordering

        explode: false
        style: form
      - in: query
        name: ps_update_stream
        schema:
          type: string
      - in: query
        name: resolution
        schema:
          type: string
      - in: query
        name: status
        schema:
          type: string
      - in: query
        name: type
        schema:
          type: string
          enum:
          - BUGZILLA
          - JIRA
      - in: query
        name: updated_dt
        schema:
          type: string
          format: date-time
      - in: query
        name: updated_dt__date
        schema:
          type: string
          format: date
      - in: query
        name: updated_dt__date__gte
        schema:
          type: string
          format: date
      - in: query
        name: updated_dt__date__lte
        schema:
          type: string
          format: date
      - in: query
        name: updated_dt__gt
        schema:
          type: string
          format: date-time
      - in: query
        name: updated_dt__gte
        schema:
          type: string
          format: date-time
      - in: query
        name: updated_dt__lt
        schema:
          type: string
          format: date-time
      - in: query
        name: updated_dt__lte
        schema:
          type: string
          format: date-time
      - in: query
        name: uuid
        schema:
          type: string
          format: uuid
      tags:
      - osidb
      security:
      - OsidbTokenAuthentication: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/PaginatedTrackerList'
                - type: object
                  properties:
                    dt:
                      type: string
                      format: date-time
                    env:
                      type: string
                    revision:
                      type: string
                    version:
                      type: string
          description: ''
    post:
      operationId: osidb_api_v1_trackers_create
      parameters:
      - in: header
        name: Bugzilla-Api-Key
        schema:
          type: string
        description: User generated api key for Bugzilla authentication.
        required: true
      - in: header
        name: Jira-Api-Key
        schema:
          type: string
        description: User generated api key for Jira authentication.
        required: true
      tags:
      - osidb
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrackerPost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TrackerPost'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TrackerPost'
        required: true
      security:
      - OsidbTokenAuthentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/TrackerPost'
                - type: object
                  properties:
                    dt:
                      type: string
                      format: date-time
                    env:
                      type: string
                    revision:
                      type: string
                    version:
                      type: string
          description: ''
  /osidb/api/v1/trackers/{uuid}:
    get:
      operationId: osidb_api_v1_trackers_retrieve
      parameters:
      - in: query
        name: exclude_fields
        schema:
          type: array
          items:
            type: string
        description: 'Exclude specified fields from the response. Multiple values
          may be separated by commas. Dot notation can be used to filter on related
          model fields. Example: `exclude_fields=field,related_model_field.field`'
      - in: query
        name: include_fields
        schema:
          type: array
          items:
            type: string
        description: 'Include only specified fields in the response. Multiple values
          may be separated by commas. Dot notation can be used to filter on related
          model fields. Example: `include_fields=field,related_model_field.field`'
      - in: query
        name: include_meta_attr
        schema:
          type: array
          items:
            type: string
        description: 'Specify which keys from meta_attr field should be retrieved,
          multiple values may be separated by commas. Dot notation can be used to
          specify meta_attr keys on related models. Example: `include_meta_attr=key,related_model.key`Use
          wildcards eg. `include_meta_attr=*,related_model.*` for retrieving all the
          keys from meta_attr. Omit this parameter to not include meta_attr fields
          at all. '
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Tracker.
        required: true
      tags:
      - osidb
      security:
      - OsidbTokenAuthentication: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Tracker'
                - type: object
                  properties:
                    dt:
                      type: string
                      format: date-time
                    env:
                      type: string
                    revision:
                      type: string
                    version:
                      type: string
          description: ''
    put:
      operationId: osidb_api_v1_trackers_update
      parameters:
      - in: header
        name: Bugzilla-Api-Key
        schema:
          type: string
        description: User generated api key for Bugzilla authentication.
        required: true
      - in: header
        name: Jira-Api-Key
        schema:
          type: string
        description: User generated api key for Jira authentication.
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this Tracker.
        required: true
      tags:
      - osidb
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tracker'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Tracker'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Tracker'
        required: true
      security:
      - OsidbTokenAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Tracker'
                - type: object
                  properties:
                    dt:
                      type: string
                      format: date-time
                    env:
                      type: string
                    revision:
                      type: string
                    version:
                      type: string
          description: ''
  /osidb/healthy:
    get:
      operationId: osidb_healthy_retrieve
      description: unauthenticated view providing healthcheck on osidb service
      tags:
      - osidb
      security:
      - OsidbTokenAuthentication: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  dt:
                    type: string
                    format: date-time
                  env:
                    type: string
                  revision:
                    type: string
                  version:
                    type: string
          description: ''
  /osidb/whoami:
    get:
      operationId: osidb_whoami_retrieve
      description: View that provides information about the currently logged-in user
      tags:
      - osidb
      security:
      - OsidbTokenAuthentication: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  dt:
                    type: string
                    format: date-time
                  email:
                    type: string
                  env:
                    type: string
                  groups:
                    type: array
                    items:
                      type: string
                  profile:
                    type: object
                    properties:
                      bz_user_id:
                        type: string
                      jira_user_id:
                        type: string
                  revision:
                    type: string
                  username:
                    type: string
                  version:
                    type: string
          description: ''
  /trackers/api/v1/file:
    post:
      operationId: trackers_api_v1_file_create
      description: Given a list of flaws, generates a list of suggested trackers to
        file.
      tags:
      - trackers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlawUUIDList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FlawUUIDList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FlawUUIDList'
        required: true
      security:
      - OsidbTokenAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/TrackerSuggestion'
                - type: object
                  properties:
                    dt:
                      type: string
                      format: date-time
                    env:
                      type: string
                    revision:
                      type: string
                    version:
                      type: string
          description: ''
  /workflows/:
    get:
      operationId: workflows_retrieve
      description: index API endpoint listing available API endpoints
      tags:
      - workflows
      security:
      - OsidbTokenAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  dt:
                    type: string
                    format: date-time
                  env:
                    type: string
                  revision:
                    type: string
                  version:
                    type: string
          description: ''
  /workflows/api/v1/workflows:
    get:
      operationId: workflows_api_v1_workflows_retrieve
      description: workflow info API endpoint
      tags:
      - workflows
      security:
      - OsidbTokenAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  dt:
                    type: string
                    format: date-time
                  env:
                    type: string
                  revision:
                    type: string
                  version:
                    type: string
          description: ''
  /workflows/api/v1/workflows/{id}:
    get:
      operationId: workflows_api_v1_workflows_retrieve_2
      description: |-
        workflow classification API endpoint

        for flaw identified by UUID or CVE returns its workflow:state classification

        params:

            verbose - return also workflows with flaw classification
                      which represents the reasoning of the result
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: query
        name: verbose
        schema:
          type: boolean
        description: Return also workflows with flaw classification which represents
          the reasoning of the result.
      tags:
      - workflows
      security:
      - OsidbTokenAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  dt:
                    type: string
                    format: date-time
                  env:
                    type: string
                  revision:
                    type: string
                  version:
                    type: string
          description: ''
  /workflows/api/v1/workflows/{id}/adjust:
    post:
      operationId: workflows_api_v1_workflows_adjust_create
      description: |-
        workflow adjustion API endpoint

        adjust workflow classification of flaw identified by UUID or CVE
        and return its workflow:state classification (new if changed and old otherwise)

        adjust operation is idempotent so when the classification
        is already adjusted running it results in no operation
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - workflows
      security:
      - OsidbTokenAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  dt:
                    type: string
                    format: date-time
                  env:
                    type: string
                  revision:
                    type: string
                  version:
                    type: string
          description: ''
  /workflows/healthy:
    get:
      operationId: workflows_healthy_retrieve
      description: unauthenticated health check API endpoint
      tags:
      - workflows
      security:
      - OsidbTokenAuthentication: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  dt:
                    type: string
                    format: date-time
                  env:
                    type: string
                  revision:
                    type: string
                  version:
                    type: string
          description: ''
components:
  schemas:
    Affect:
      type: object
      description: Affect serializer
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        flaw:
          type: string
          format: uuid
          nullable: true
        affectedness:
          oneOf:
          - $ref: '#/components/schemas/AffectednessEnum'
          - $ref: '#/components/schemas/BlankEnum'
        resolution:
          oneOf:
          - $ref: '#/components/schemas/ResolutionEnum'
          - $ref: '#/components/schemas/BlankEnum'
        ps_module:
          type: string
          maxLength: 100
        ps_product:
          type: string
          readOnly: true
        ps_component:
          type: string
          maxLength: 255
        impact:
          oneOf:
          - $ref: '#/components/schemas/ImpactEnum'
          - $ref: '#/components/schemas/BlankEnum'
        trackers:
          type: array
          items:
            $ref: '#/components/schemas/Tracker'
          readOnly: true
        delegated_resolution:
          type: string
          readOnly: true
        cvss_scores:
          type: array
          items:
            $ref: '#/components/schemas/AffectCVSS'
          readOnly: true
        embargoed:
          type: boolean
          description: The embargoed boolean attribute is technically read-only as
            it just indirectly modifies the ACLs but is mandatory as it controls the
            access to the resource.
        alerts:
          type: array
          items:
            $ref: '#/components/schemas/Alert'
          readOnly: true
        created_dt:
          type: string
          format: date-time
          readOnly: true
        updated_dt:
          type: string
          format: date-time
          description: The updated_dt timestamp attribute is mandatory on update as
            it is used to detect mit-air collisions.
      required:
      - alerts
      - created_dt
      - cvss_scores
      - delegated_resolution
      - embargoed
      - flaw
      - ps_component
      - ps_module
      - ps_product
      - trackers
      - updated_dt
      - uuid
    AffectBulkPostPutResponse:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/Affect'
      required:
      - results
    AffectBulkPut:
      type: object
      description: Affect serializer
      properties:
        uuid:
          type: string
          format: uuid
        flaw:
          type: string
          format: uuid
          nullable: true
        affectedness:
          oneOf:
          - $ref: '#/components/schemas/AffectednessEnum'
          - $ref: '#/components/schemas/BlankEnum'
        resolution:
          oneOf:
          - $ref: '#/components/schemas/ResolutionEnum'
          - $ref: '#/components/schemas/BlankEnum'
        ps_module:
          type: string
          maxLength: 100
        ps_product:
          type: string
          readOnly: true
        ps_component:
          type: string
          maxLength: 255
        impact:
          oneOf:
          - $ref: '#/components/schemas/ImpactEnum'
          - $ref: '#/components/schemas/BlankEnum'
        trackers:
          type: array
          items:
            $ref: '#/components/schemas/Tracker'
          readOnly: true
        delegated_resolution:
          type: string
          readOnly: true
        cvss_scores:
          type: array
          items:
            $ref: '#/components/schemas/AffectCVSS'
          readOnly: true
        embargoed:
          type: boolean
          description: The embargoed boolean attribute is technically read-only as
            it just indirectly modifies the ACLs but is mandatory as it controls the
            access to the resource.
        alerts:
          type: array
          items:
            $ref: '#/components/schemas/Alert'
          readOnly: true
        created_dt:
          type: string
          format: date-time
          readOnly: true
        updated_dt:
          type: string
          format: date-time
          description: The updated_dt timestamp attribute is mandatory on update as
            it is used to detect mit-air collisions.
      required:
      - alerts
      - created_dt
      - cvss_scores
      - delegated_resolution
      - embargoed
      - flaw
      - ps_component
      - ps_module
      - ps_product
      - trackers
      - updated_dt
      - uuid
    AffectCVSS:
      type: object
      description: AffectCVSS serializer
      properties:
        affect:
          type: string
          format: uuid
        comment:
          type: string
          nullable: true
        cvss_version:
          $ref: '#/components/schemas/CvssVersionEnum'
        issuer:
          $ref: '#/components/schemas/IssuerEnum'
        score:
          type: number
          format: double
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        vector:
          type: string
          maxLength: 200
        embargoed:
          type: boolean
          description: The embargoed boolean attribute is technically read-only as
            it just indirectly modifies the ACLs but is mandatory as it controls the
            access to the resource.
        alerts:
          type: array
          items:
            $ref: '#/components/schemas/Alert'
          readOnly: true
        created_dt:
          type: string
          format: date-time
          readOnly: true
        updated_dt:
          type: string
          format: date-time
          description: The updated_dt timestamp attribute is mandatory on update as
            it is used to detect mit-air collisions.
      required:
      - alerts
      - created_dt
      - cvss_version
      - embargoed
      - issuer
      - score
      - updated_dt
      - uuid
      - vector
    AffectCVSSPost:
      type: object
      description: AffectCVSS serializer
      properties:
        comment:
          type: string
          nullable: true
        cvss_version:
          $ref: '#/components/schemas/CvssVersionEnum'
        issuer:
          $ref: '#/components/schemas/IssuerEnum'
        score:
          type: number
          format: double
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        vector:
          type: string
          maxLength: 200
        embargoed:
          type: boolean
          description: The embargoed boolean attribute is technically read-only as
            it just indirectly modifies the ACLs but is mandatory as it controls the
            access to the resource.
        alerts:
          type: array
          items:
            $ref: '#/components/schemas/Alert'
          readOnly: true
        created_dt:
          type: string
          format: date-time
          readOnly: true
      required:
      - alerts
      - created_dt
      - cvss_version
      - embargoed
      - issuer
      - score
      - uuid
      - vector
    AffectCVSSPut:
      type: object
      description: AffectCVSS serializer
      properties:
        comment:
          type: string
          nullable: true
        cvss_version:
          $ref: '#/components/schemas/CvssVersionEnum'
        issuer:
          $ref: '#/components/schemas/IssuerEnum'
        score:
          type: number
          format: double
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        vector:
          type: string
          maxLength: 200
        embargoed:
          type: boolean
          description: The embargoed boolean attribute is technically read-only as
            it just indirectly modifies the ACLs but is mandatory as it controls the
            access to the resource.
        alerts:
          type: array
          items:
            $ref: '#/components/schemas/Alert'
          readOnly: true
        created_dt:
          type: string
          format: date-time
          readOnly: true
        updated_dt:
          type: string
          format: date-time
          description: The updated_dt timestamp attribute is mandatory on update as
            it is used to detect mit-air collisions.
      required:
      - alerts
      - created_dt
      - cvss_version
      - embargoed
      - issuer
      - score
      - updated_dt
      - uuid
      - vector
    AffectPost:
      type: object
      description: Affect serializer
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        flaw:
          type: string
          format: uuid
          nullable: true
        affectedness:
          oneOf:
          - $ref: '#/components/schemas/AffectednessEnum'
          - $ref: '#/components/schemas/BlankEnum'
        resolution:
          oneOf:
          - $ref: '#/components/schemas/ResolutionEnum'
          - $ref: '#/components/schemas/BlankEnum'
        ps_module:
          type: string
          maxLength: 100
        ps_product:
          type: string
          readOnly: true
        ps_component:
          type: string
          maxLength: 255
        impact:
          oneOf:
          - $ref: '#/components/schemas/ImpactEnum'
          - $ref: '#/components/schemas/BlankEnum'
        trackers:
          type: array
          items:
            $ref: '#/components/schemas/Tracker'
          readOnly: true
        delegated_resolution:
          type: string
          readOnly: true
        cvss_scores:
          type: array
          items:
            $ref: '#/components/schemas/AffectCVSS'
          readOnly: true
        embargoed:
          type: boolean
          description: The embargoed boolean attribute is technically read-only as
            it just indirectly modifies the ACLs but is mandatory as it controls the
            access to the resource.
        alerts:
          type: array
          items:
            $ref: '#/components/schemas/Alert'
          readOnly: true
        created_dt:
          type: string
          format: date-time
          readOnly: true
      required:
      - alerts
      - created_dt
      - cvss_scores
      - delegated_resolution
      - embargoed
      - flaw
      - ps_component
      - ps_module
      - ps_product
      - trackers
      - uuid
    AffectReportData:
      type: object
      properties:
        ps_module:
          type: string
          maxLength: 100
        ps_component:
          type: string
          maxLength: 255
        affectedness:
          oneOf:
          - $ref: '#/components/schemas/AffectednessEnum'
          - $ref: '#/components/schemas/BlankEnum'
        resolution:
          oneOf:
          - $ref: '#/components/schemas/ResolutionEnum'
          - $ref: '#/components/schemas/BlankEnum'
        trackers:
          type: array
          items:
            $ref: '#/components/schemas/TrackerReportData'
      required:
      - ps_component
      - ps_module
    AffectednessEnum:
      enum:
      - NEW
      - AFFECTED
      - NOTAFFECTED
      type: string
    Alert:
      type: object
      description: Alerts indicate some inconsistency in a linked flaw, affect, tracker
        or other models.
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 255
        description:
          type: string
        alert_type:
          $ref: '#/components/schemas/AlertTypeEnum'
        resolution_steps:
          type: string
        parent_uuid:
          type: string
          format: uuid
          readOnly: true
        parent_model:
          type: string
          readOnly: true
      required:
      - description
      - name
      - parent_model
      - parent_uuid
      - uuid
    AlertTypeEnum:
      enum:
      - WARNING
      - ERROR
      type: string
    Audit:
      type: object
      properties:
        pgh_created_at:
          type: string
          format: date-time
          readOnly: true
          description: When the event was created.
        pgh_slug:
          type: string
          description: The unique identifier across all event tables.
        pgh_obj_model:
          type: string
          description: The object model.
          maxLength: 64
        pgh_obj_id:
          type: string
          nullable: true
          description: The primary key of the object.
        pgh_label:
          type: string
          description: The event label.
        pgh_context:
          nullable: true
          description: The context associated with the event.
        pgh_diff:
          description: The diff between the previous event of the same label.
        pgh_data:
          type: string
          readOnly: true
      required:
      - pgh_created_at
      - pgh_data
      - pgh_diff
      - pgh_label
      - pgh_obj_model
      - pgh_slug
    BlankEnum:
      enum:
      - ''
    Comment:
      type: object
      description: FlawComment serializer for use by FlawSerializer
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        text:
          type: string
        external_system_id:
          type: string
          maxLength: 100
        order:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        creator:
          type: string
          maxLength: 100
        is_private:
          type: boolean
        alerts:
          type: array
          items:
            $ref: '#/components/schemas/Alert'
          readOnly: true
        created_dt:
          type: string
          format: date-time
          readOnly: true
        updated_dt:
          type: string
          format: date-time
          description: The updated_dt timestamp attribute is mandatory on update as
            it is used to detect mit-air collisions.
      required:
      - alerts
      - created_dt
      - text
      - updated_dt
      - uuid
    CvssVersionEnum:
      enum:
      - V2
      - V3
      - V4
      type: string
    EPSS:
      type: object
      properties:
        cve:
          type: string
          maxLength: 50
        epss:
          type: number
          format: double
      required:
      - cve
      - epss
    Erratum:
      type: object
      description: Erratum serializer
      properties:
        et_id:
          type: integer
          readOnly: true
        advisory_name:
          type: string
          readOnly: true
        shipped_dt:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        created_dt:
          type: string
          format: date-time
          readOnly: true
        updated_dt:
          type: string
          format: date-time
          description: The updated_dt timestamp attribute is mandatory on update as
            it is used to detect mit-air collisions.
      required:
      - advisory_name
      - created_dt
      - et_id
      - shipped_dt
      - updated_dt
    ExploitOnlyReportData:
      type: object
      properties:
        cve:
          type: string
          maxLength: 50
        date:
          type: string
          format: date
          nullable: true
        source:
          $ref: '#/components/schemas/ExploitOnlyReportDataSourceEnum'
        reference:
          type: string
          default: N/A
          maxLength: 512
        maturity_preliminary:
          allOf:
          - $ref: '#/components/schemas/MaturityPreliminaryEnum'
          minimum: -2147483648
          maximum: 2147483647
        flaw:
          type: boolean
      required:
      - cve
      - flaw
      - maturity_preliminary
      - source
    ExploitOnlyReportDataSourceEnum:
      enum:
      - CISA
      - Metasploit
      - Exploit-DB
      type: string
    Flaw:
      type: object
      description: serialize flaw model
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        cve_id:
          type: string
          nullable: true
        impact:
          oneOf:
          - $ref: '#/components/schemas/ImpactEnum'
          - $ref: '#/components/schemas/BlankEnum'
        components:
          type: array
          items:
            type: string
            maxLength: 100
        title:
          type: string
        trackers:
          type: array
          items:
            type: string
          readOnly: true
        comment_zero:
          type: string
        cve_description:
          type: string
        requires_cve_description:
          oneOf:
          - $ref: '#/components/schemas/RequiresCveDescriptionEnum'
          - $ref: '#/components/schemas/BlankEnum'
        statement:
          type: string
        cwe_id:
          type: string
          maxLength: 255
        unembargo_dt:
          type: string
          format: date-time
          nullable: true
        source:
          oneOf:
          - $ref: '#/components/schemas/SourceBe0Enum'
          - $ref: '#/components/schemas/BlankEnum'
        reported_dt:
          type: string
          format: date-time
          nullable: true
        mitigation:
          type: string
        major_incident_state:
          oneOf:
          - $ref: '#/components/schemas/MajorIncidentStateEnum'
          - $ref: '#/components/schemas/BlankEnum'
        major_incident_start_dt:
          type: string
          format: date-time
          nullable: true
        nist_cvss_validation:
          oneOf:
          - $ref: '#/components/schemas/NistCvssValidationEnum'
          - $ref: '#/components/schemas/BlankEnum'
        affects:
          type: array
          items:
            $ref: '#/components/schemas/Affect'
          readOnly: true
        comments:
          type: array
          items:
            $ref: '#/components/schemas/Comment'
          readOnly: true
        package_versions:
          type: array
          items:
            $ref: '#/components/schemas/Package'
          readOnly: true
        acknowledgments:
          type: array
          items:
            $ref: '#/components/schemas/FlawAcknowledgment'
          readOnly: true
        references:
          type: array
          items:
            $ref: '#/components/schemas/FlawReference'
          readOnly: true
        cvss_scores:
          type: array
          items:
            $ref: '#/components/schemas/FlawCVSS'
          readOnly: true
        embargoed:
          type: boolean
          description: The embargoed boolean attribute is technically read-only as
            it just indirectly modifies the ACLs but is mandatory as it controls the
            access to the resource.
        created_dt:
          type: string
          format: date-time
          readOnly: true
        updated_dt:
          type: string
          format: date-time
          description: The updated_dt timestamp attribute is mandatory on update as
            it is used to detect mit-air collisions.
        classification:
          type: object
          properties:
            workflow:
              type: string
            state:
              type: string
              enum:
              - ''
              - NEW
              - TRIAGE
              - PRE_SECONDARY_ASSESSMENT
              - SECONDARY_ASSESSMENT
              - DONE
              - REJECTED
          readOnly: true
        group_key:
          type: string
          maxLength: 60
        owner:
          type: string
          maxLength: 60
        task_key:
          type: string
          maxLength: 60
        team_id:
          type: string
          maxLength: 8
        alerts:
          type: array
          items:
            $ref: '#/components/schemas/Alert'
          readOnly: true
      required:
      - acknowledgments
      - affects
      - alerts
      - classification
      - comment_zero
      - comments
      - created_dt
      - cvss_scores
      - embargoed
      - package_versions
      - references
      - title
      - trackers
      - updated_dt
      - uuid
    FlawAcknowledgment:
      type: object
      description: FlawAcknowledgment serializer
      properties:
        name:
          type: string
          maxLength: 255
        affiliation:
          type: string
          maxLength: 255
        from_upstream:
          type: boolean
        flaw:
          type: string
          format: uuid
        uuid:
          type: string
          format: uuid
          readOnly: true
        embargoed:
          type: boolean
          description: The embargoed boolean attribute is technically read-only as
            it just indirectly modifies the ACLs but is mandatory as it controls the
            access to the resource.
        alerts:
          type: array
          items:
            $ref: '#/components/schemas/Alert'
          readOnly: true
        created_dt:
          type: string
          format: date-time
          readOnly: true
        updated_dt:
          type: string
          format: date-time
          description: The updated_dt timestamp attribute is mandatory on update as
            it is used to detect mit-air collisions.
      required:
      - affiliation
      - alerts
      - created_dt
      - embargoed
      - flaw
      - from_upstream
      - name
      - updated_dt
      - uuid
    FlawAcknowledgmentPost:
      type: object
      description: FlawAcknowledgment serializer
      properties:
        name:
          type: string
          maxLength: 255
        affiliation:
          type: string
          maxLength: 255
        from_upstream:
          type: boolean
        uuid:
          type: string
          format: uuid
          readOnly: true
        embargoed:
          type: boolean
          description: The embargoed boolean attribute is technically read-only as
            it just indirectly modifies the ACLs but is mandatory as it controls the
            access to the resource.
        alerts:
          type: array
          items:
            $ref: '#/components/schemas/Alert'
          readOnly: true
        created_dt:
          type: string
          format: date-time
          readOnly: true
      required:
      - affiliation
      - alerts
      - created_dt
      - embargoed
      - from_upstream
      - name
      - uuid
    FlawAcknowledgmentPut:
      type: object
      description: FlawAcknowledgment serializer
      properties:
        name:
          type: string
          maxLength: 255
        affiliation:
          type: string
          maxLength: 255
        from_upstream:
          type: boolean
        uuid:
          type: string
          format: uuid
          readOnly: true
        embargoed:
          type: boolean
          description: The embargoed boolean attribute is technically read-only as
            it just indirectly modifies the ACLs but is mandatory as it controls the
            access to the resource.
        alerts:
          type: array
          items:
            $ref: '#/components/schemas/Alert'
          readOnly: true
        created_dt:
          type: string
          format: date-time
          readOnly: true
        updated_dt:
          type: string
          format: date-time
          description: The updated_dt timestamp attribute is mandatory on update as
            it is used to detect mit-air collisions.
      required:
      - affiliation
      - alerts
      - created_dt
      - embargoed
      - from_upstream
      - name
      - updated_dt
      - uuid
    FlawCVSS:
      type: object
      description: FlawCVSS serializer
      properties:
        flaw:
          type: string
          format: uuid
        comment:
          type: string
          nullable: true
        cvss_version:
          $ref: '#/components/schemas/CvssVersionEnum'
        issuer:
          $ref: '#/components/schemas/IssuerEnum'
        score:
          type: number
          format: double
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        vector:
          type: string
          maxLength: 200
        embargoed:
          type: boolean
          description: The embargoed boolean attribute is technically read-only as
            it just indirectly modifies the ACLs but is mandatory as it controls the
            access to the resource.
        alerts:
          type: array
          items:
            $ref: '#/components/schemas/Alert'
          readOnly: true
        created_dt:
          type: string
          format: date-time
          readOnly: true
        updated_dt:
          type: string
          format: date-time
          description: The updated_dt timestamp attribute is mandatory on update as
            it is used to detect mit-air collisions.
      required:
      - alerts
      - created_dt
      - cvss_version
      - embargoed
      - issuer
      - score
      - updated_dt
      - uuid
      - vector
    FlawCVSSPost:
      type: object
      description: FlawCVSS serializer
      properties:
        comment:
          type: string
          nullable: true
        cvss_version:
          $ref: '#/components/schemas/CvssVersionEnum'
        issuer:
          $ref: '#/components/schemas/IssuerEnum'
        score:
          type: number
          format: double
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        vector:
          type: string
          maxLength: 200
        embargoed:
          type: boolean
          description: The embargoed boolean attribute is technically read-only as
            it just indirectly modifies the ACLs but is mandatory as it controls the
            access to the resource.
        alerts:
          type: array
          items:
            $ref: '#/components/schemas/Alert'
          readOnly: true
        created_dt:
          type: string
          format: date-time
          readOnly: true
      required:
      - alerts
      - created_dt
      - cvss_version
      - embargoed
      - issuer
      - score
      - uuid
      - vector
    FlawCVSSPut:
      type: object
      description: FlawCVSS serializer
      properties:
        comment:
          type: string
          nullable: true
        cvss_version:
          $ref: '#/components/schemas/CvssVersionEnum'
        issuer:
          $ref: '#/components/schemas/IssuerEnum'
        score:
          type: number
          format: double
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        vector:
          type: string
          maxLength: 200
        embargoed:
          type: boolean
          description: The embargoed boolean attribute is technically read-only as
            it just indirectly modifies the ACLs but is mandatory as it controls the
            access to the resource.
        alerts:
          type: array
          items:
            $ref: '#/components/schemas/Alert'
          readOnly: true
        created_dt:
          type: string
          format: date-time
          readOnly: true
        updated_dt:
          type: string
          format: date-time
          description: The updated_dt timestamp attribute is mandatory on update as
            it is used to detect mit-air collisions.
      required:
      - alerts
      - created_dt
      - cvss_version
      - embargoed
      - issuer
      - score
      - updated_dt
      - uuid
      - vector
    FlawComment:
      type: object
      description: FlawComment serializer for use by flaw_comments endpoint
      properties:
        flaw:
          type: string
          format: uuid
        text:
          type: string
        uuid:
          type: string
          format: uuid
          readOnly: true
        external_system_id:
          type: string
          readOnly: true
        order:
          type: integer
          deprecated: true
        creator:
          type: string
          maxLength: 100
        is_private:
          type: boolean
        alerts:
          type: array
          items:
            $ref: '#/components/schemas/Alert'
          readOnly: true
        created_dt:
          type: string
          format: date-time
          readOnly: true
        updated_dt:
          type: string
          format: date-time
          description: The updated_dt timestamp attribute is mandatory on update as
            it is used to detect mit-air collisions.
        embargoed:
          type: boolean
          description: The embargoed boolean attribute is technically read-only as
            it just indirectly modifies the ACLs but is mandatory as it controls the
            access to the resource.
      required:
      - alerts
      - created_dt
      - embargoed
      - external_system_id
      - flaw
      - text
      - updated_dt
      - uuid
    FlawCommentPost:
      type: object
      description: FlawComment serializer for use by flaw_comments endpoint
      properties:
        text:
          type: string
        uuid:
          type: string
          format: uuid
          readOnly: true
        creator:
          type: string
          maxLength: 100
        is_private:
          type: boolean
        alerts:
          type: array
          items:
            $ref: '#/components/schemas/Alert'
          readOnly: true
        created_dt:
          type: string
          format: date-time
          readOnly: true
        embargoed:
          type: boolean
          description: The embargoed boolean attribute is technically read-only as
            it just indirectly modifies the ACLs but is mandatory as it controls the
            access to the resource.
      required:
      - alerts
      - created_dt
      - embargoed
      - text
      - uuid
    FlawPackageVersion:
      type: object
      description: Package model serializer
      properties:
        package:
          type: string
          maxLength: 2048
        versions:
          type: array
          items:
            $ref: '#/components/schemas/FlawVersion'
        flaw:
          type: string
          format: uuid
        uuid:
          type: string
          format: uuid
          readOnly: true
        embargoed:
          type: boolean
          description: The embargoed boolean attribute is technically read-only as
            it just indirectly modifies the ACLs but is mandatory as it controls the
            access to the resource.
        created_dt:
          type: string
          format: date-time
          readOnly: true
        updated_dt:
          type: string
          format: date-time
          description: The updated_dt timestamp attribute is mandatory on update as
            it is used to detect mit-air collisions.
      required:
      - created_dt
      - embargoed
      - flaw
      - package
      - updated_dt
      - uuid
      - versions
    FlawPackageVersionPost:
      type: object
      description: Package model serializer
      properties:
        package:
          type: string
          maxLength: 2048
        versions:
          type: array
          items:
            $ref: '#/components/schemas/FlawVersion'
        uuid:
          type: string
          format: uuid
          readOnly: true
        embargoed:
          type: boolean
          description: The embargoed boolean attribute is technically read-only as
            it just indirectly modifies the ACLs but is mandatory as it controls the
            access to the resource.
        created_dt:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_dt
      - embargoed
      - package
      - uuid
      - versions
    FlawPackageVersionPut:
      type: object
      description: Package model serializer
      properties:
        package:
          type: string
          maxLength: 2048
        versions:
          type: array
          items:
            $ref: '#/components/schemas/FlawVersion'
        uuid:
          type: string
          format: uuid
          readOnly: true
        embargoed:
          type: boolean
          description: The embargoed boolean attribute is technically read-only as
            it just indirectly modifies the ACLs but is mandatory as it controls the
            access to the resource.
        created_dt:
          type: string
          format: date-time
          readOnly: true
        updated_dt:
          type: string
          format: date-time
          description: The updated_dt timestamp attribute is mandatory on update as
            it is used to detect mit-air collisions.
      required:
      - created_dt
      - embargoed
      - package
      - updated_dt
      - uuid
      - versions
    FlawPost:
      type: object
      description: serialize flaw model
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        cve_id:
          type: string
          nullable: true
        impact:
          oneOf:
          - $ref: '#/components/schemas/ImpactEnum'
          - $ref: '#/components/schemas/BlankEnum'
        components:
          type: array
          items:
            type: string
            maxLength: 100
        title:
          type: string
        trackers:
          type: array
          items:
            type: string
          readOnly: true
        comment_zero:
          type: string
        cve_description:
          type: string
        requires_cve_description:
          oneOf:
          - $ref: '#/components/schemas/RequiresCveDescriptionEnum'
          - $ref: '#/components/schemas/BlankEnum'
        statement:
          type: string
        cwe_id:
          type: string
          maxLength: 255
        unembargo_dt:
          type: string
          format: date-time
          nullable: true
        source:
          oneOf:
          - $ref: '#/components/schemas/SourceBe0Enum'
          - $ref: '#/components/schemas/BlankEnum'
        reported_dt:
          type: string
          format: date-time
          nullable: true
        mitigation:
          type: string
        major_incident_state:
          oneOf:
          - $ref: '#/components/schemas/MajorIncidentStateEnum'
          - $ref: '#/components/schemas/BlankEnum'
        major_incident_start_dt:
          type: string
          format: date-time
          nullable: true
        nist_cvss_validation:
          oneOf:
          - $ref: '#/components/schemas/NistCvssValidationEnum'
          - $ref: '#/components/schemas/BlankEnum'
        affects:
          type: array
          items:
            $ref: '#/components/schemas/Affect'
          readOnly: true
        comments:
          type: array
          items:
            $ref: '#/components/schemas/Comment'
          readOnly: true
        package_versions:
          type: array
          items:
            $ref: '#/components/schemas/Package'
          readOnly: true
        acknowledgments:
          type: array
          items:
            $ref: '#/components/schemas/FlawAcknowledgment'
          readOnly: true
        references:
          type: array
          items:
            $ref: '#/components/schemas/FlawReference'
          readOnly: true
        cvss_scores:
          type: array
          items:
            $ref: '#/components/schemas/FlawCVSS'
          readOnly: true
        embargoed:
          type: boolean
          description: The embargoed boolean attribute is technically read-only as
            it just indirectly modifies the ACLs but is mandatory as it controls the
            access to the resource.
        created_dt:
          type: string
          format: date-time
          readOnly: true
        classification:
          type: object
          properties:
            workflow:
              type: string
            state:
              type: string
              enum:
              - ''
              - NEW
              - TRIAGE
              - PRE_SECONDARY_ASSESSMENT
              - SECONDARY_ASSESSMENT
              - DONE
              - REJECTED
          readOnly: true
        group_key:
          type: string
          maxLength: 60
        owner:
          type: string
          maxLength: 60
        task_key:
          type: string
          maxLength: 60
        team_id:
          type: string
          maxLength: 8
        alerts:
          type: array
          items:
            $ref: '#/components/schemas/Alert'
          readOnly: true
      required:
      - acknowledgments
      - affects
      - alerts
      - classification
      - comment_zero
      - comments
      - created_dt
      - cvss_scores
      - embargoed
      - package_versions
      - references
      - title
      - trackers
      - uuid
    FlawReference:
      type: object
      description: FlawReference serializer
      properties:
        description:
          type: string
        flaw:
          type: string
          format: uuid
        type:
          $ref: '#/components/schemas/FlawReferenceType'
        url:
          type: string
          format: uri
          maxLength: 2048
        uuid:
          type: string
          format: uuid
          readOnly: true
        embargoed:
          type: boolean
          description: The embargoed boolean attribute is technically read-only as
            it just indirectly modifies the ACLs but is mandatory as it controls the
            access to the resource.
        alerts:
          type: array
          items:
            $ref: '#/components/schemas/Alert'
          readOnly: true
        created_dt:
          type: string
          format: date-time
          readOnly: true
        updated_dt:
          type: string
          format: date-time
          description: The updated_dt timestamp attribute is mandatory on update as
            it is used to detect mit-air collisions.
      required:
      - alerts
      - created_dt
      - embargoed
      - flaw
      - updated_dt
      - url
      - uuid
    FlawReferencePost:
      type: object
      description: FlawReference serializer
      properties:
        description:
          type: string
        type:
          $ref: '#/components/schemas/FlawReferenceType'
        url:
          type: string
          format: uri
          maxLength: 2048
        uuid:
          type: string
          format: uuid
          readOnly: true
        embargoed:
          type: boolean
          description: The embargoed boolean attribute is technically read-only as
            it just indirectly modifies the ACLs but is mandatory as it controls the
            access to the resource.
        alerts:
          type: array
          items:
            $ref: '#/components/schemas/Alert'
          readOnly: true
        created_dt:
          type: string
          format: date-time
          readOnly: true
      required:
      - alerts
      - created_dt
      - embargoed
      - url
      - uuid
    FlawReferencePut:
      type: object
      description: FlawReference serializer
      properties:
        description:
          type: string
        type:
          $ref: '#/components/schemas/FlawReferenceType'
        url:
          type: string
          format: uri
          maxLength: 2048
        uuid:
          type: string
          format: uuid
          readOnly: true
        embargoed:
          type: boolean
          description: The embargoed boolean attribute is technically read-only as
            it just indirectly modifies the ACLs but is mandatory as it controls the
            access to the resource.
        alerts:
          type: array
          items:
            $ref: '#/components/schemas/Alert'
          readOnly: true
        created_dt:
          type: string
          format: date-time
          readOnly: true
        updated_dt:
          type: string
          format: date-time
          description: The updated_dt timestamp attribute is mandatory on update as
            it is used to detect mit-air collisions.
      required:
      - alerts
      - created_dt
      - embargoed
      - updated_dt
      - url
      - uuid
    FlawReferenceType:
      enum:
      - ARTICLE
      - EXTERNAL
      - SOURCE
      - UPSTREAM
      type: string
    FlawReportData:
      type: object
      properties:
        cve_id:
          type: string
          nullable: true
          maxLength: 500
        affects:
          type: array
          items:
            $ref: '#/components/schemas/AffectReportData'
    FlawUUIDList:
      type: object
      properties:
        flaw_uuids:
          type: array
          items:
            type: string
            format: uuid
      required:
      - flaw_uuids
    FlawVersion:
      type: object
      description: PackageVer serializer used by FlawPackageVersionSerializer.
      properties:
        version:
          type: string
          maxLength: 1024
      required:
      - version
    ImpactEnum:
      enum:
      - LOW
      - MODERATE
      - IMPORTANT
      - CRITICAL
      type: string
    IssuerEnum:
      enum:
      - CVEORG
      - RH
      - NIST
      - OSV
      type: string
    MajorIncidentStateEnum:
      enum:
      - REQUESTED
      - REJECTED
      - APPROVED
      - CISA_APPROVED
      - MINOR
      - ZERO_DAY
      - INVALID
      type: string
    MaturityPreliminaryEnum:
      enum:
      - 0
      - 1
      - 2
      - 3
      type: integer
    ModuleComponent:
      type: object
      properties:
        ps_module:
          type: string
        ps_component:
          type: string
        streams:
          type: array
          items:
            $ref: '#/components/schemas/PsStreamSelection'
        selected:
          type: boolean
        affect:
          $ref: '#/components/schemas/Affect'
      required:
      - affect
      - ps_component
      - ps_module
      - selected
      - streams
    NistCvssValidationEnum:
      enum:
      - REQUESTED
      - APPROVED
      - REJECTED
      type: string
    Package:
      type: object
      description: package_versions (Package model) serializer for read-only use in
        FlawSerializer.
      properties:
        package:
          type: string
          maxLength: 2048
        versions:
          type: array
          items:
            $ref: '#/components/schemas/PackageVer'
        alerts:
          type: array
          items:
            $ref: '#/components/schemas/Alert'
          readOnly: true
      required:
      - alerts
      - package
      - versions
    PackageVer:
      type: object
      description: |-
        PackageVer model serializer for read-only use in FlawSerializer via
        PackageVerSerializer.
      properties:
        version:
          type: string
          maxLength: 1024
        status:
          type: string
          readOnly: true
          default: UNAFFECTED
          deprecated: true
      required:
      - status
      - version
    PaginatedAffectCVSSList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/AffectCVSS'
    PaginatedAffectList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Affect'
    PaginatedAlertList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Alert'
    PaginatedAuditList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Audit'
    PaginatedEPSSList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/EPSS'
    PaginatedExploitOnlyReportDataList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/ExploitOnlyReportData'
    PaginatedFlawAcknowledgmentList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/FlawAcknowledgment'
    PaginatedFlawCVSSList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/FlawCVSS'
    PaginatedFlawCommentList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/FlawComment'
    PaginatedFlawList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Flaw'
    PaginatedFlawPackageVersionList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/FlawPackageVersion'
    PaginatedFlawReferenceList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/FlawReference'
    PaginatedFlawReportDataList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/FlawReportData'
    PaginatedSupportedProductsList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/SupportedProducts'
    PaginatedTrackerList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Tracker'
    PsStreamSelection:
      type: object
      properties:
        ps_update_stream:
          type: string
        selected:
          type: boolean
        acked:
          type: boolean
        eus:
          type: boolean
        aus:
          type: boolean
      required:
      - acked
      - aus
      - eus
      - ps_update_stream
      - selected
    Reject:
      type: object
      description: Task rejection serializer
      properties:
        reason:
          type: string
      required:
      - reason
    RequiresCveDescriptionEnum:
      enum:
      - REQUESTED
      - APPROVED
      - REJECTED
      type: string
    ResolutionEnum:
      enum:
      - FIX
      - DEFER
      - WONTFIX
      - OOSS
      - DELEGATED
      - WONTREPORT
      type: string
    SourceBe0Enum:
      enum:
      - ADOBE
      - APPLE
      - ASF
      - BIND
      - BK
      - BUGTRAQ
      - BUGZILLA
      - CERT
      - CERTIFI
      - CORELABS
      - CUSTOMER
      - CVE
      - CVEORG
      - DAILYDAVE
      - DEBIAN
      - DISTROS
      - FEDORA
      - FETCHMAIL
      - FREEDESKTOP
      - FREERADIUS
      - FRSIRT
      - FULLDISCLOSURE
      - GAIM
      - GENTOO
      - GENTOOBZ
      - GIT
      - GNOME
      - GNUPG
      - GOOGLE
      - HP
      - HW_VENDOR
      - IBM
      - IDEFENSE
      - INTERNET
      - ISC
      - ISEC
      - IT
      - JBOSS
      - JPCERT
      - KERNELBUGZILLA
      - KERNELSEC
      - LKML
      - LWN
      - MACROMEDIA
      - MAGEIA
      - MAILINGLIST
      - MILW0RM
      - MIT
      - MITRE
      - MOZILLA
      - MUTTDEV
      - NETDEV
      - NISCC
      - NVD
      - OCERT
      - OPENOFFICE
      - OPENSSL
      - OPENSUSE
      - ORACLE
      - OSS
      - OSSSECURITY
      - OSV
      - PHP
      - PIDGIN
      - POSTGRESQL
      - PRESS
      - REAL
      - REDHAT
      - RESEARCHER
      - RT
      - SAMBA
      - SECALERT
      - SECUNIA
      - SECURITYFOCUS
      - SKO
      - SQUID
      - SQUIRRELMAIL
      - SUN
      - SUNSOLVE
      - SUSE
      - TWITTER
      - UBUNTU
      - UPSTREAM
      - VENDORSEC
      - VULNWATCH
      - WIRESHARK
      - XCHAT
      - XEN
      - XPDF
      type: string
    SupportedProducts:
      type: object
      properties:
        name:
          type: string
          maxLength: 100
      required:
      - name
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - password
      - refresh
      - username
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
    TokenVerify:
      type: object
      properties:
        token:
          type: string
          writeOnly: true
      required:
      - token
    Tracker:
      type: object
      description: Tracker serializer
      properties:
        affects:
          type: array
          items:
            type: string
            format: uuid
        errata:
          type: array
          items:
            $ref: '#/components/schemas/Erratum'
          readOnly: true
        external_system_id:
          type: string
          readOnly: true
        ps_update_stream:
          type: string
          maxLength: 100
        status:
          type: string
          readOnly: true
        resolution:
          type: string
          readOnly: true
        type:
          allOf:
          - $ref: '#/components/schemas/TrackerType'
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        embargoed:
          type: boolean
          description: The embargoed boolean attribute is technically read-only as
            it just indirectly modifies the ACLs but is mandatory as it controls the
            access to the resource.
        alerts:
          type: array
          items:
            $ref: '#/components/schemas/Alert'
          readOnly: true
        created_dt:
          type: string
          format: date-time
          readOnly: true
        updated_dt:
          type: string
          format: date-time
          description: The updated_dt timestamp attribute is mandatory on update as
            it is used to detect mit-air collisions.
        sync_to_bz:
          type: boolean
          writeOnly: true
          description: Setting sync_to_bz to false disables flaw sync with Bugzilla
            after this operation. Use only as part of bulk actions and trigger a flaw
            bugzilla sync afterwards. Does nothing if BZ is disabled.
      required:
      - alerts
      - created_dt
      - embargoed
      - errata
      - external_system_id
      - resolution
      - status
      - type
      - updated_dt
      - uuid
    TrackerPost:
      type: object
      description: Tracker serializer
      properties:
        affects:
          type: array
          items:
            type: string
            format: uuid
        errata:
          type: array
          items:
            $ref: '#/components/schemas/Erratum'
          readOnly: true
        ps_update_stream:
          type: string
          maxLength: 100
        status:
          type: string
          readOnly: true
        resolution:
          type: string
          readOnly: true
        type:
          allOf:
          - $ref: '#/components/schemas/TrackerType'
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        embargoed:
          type: boolean
          description: The embargoed boolean attribute is technically read-only as
            it just indirectly modifies the ACLs but is mandatory as it controls the
            access to the resource.
        alerts:
          type: array
          items:
            $ref: '#/components/schemas/Alert'
          readOnly: true
        created_dt:
          type: string
          format: date-time
          readOnly: true
        updated_dt:
          type: string
          format: date-time
          description: The updated_dt timestamp attribute is mandatory on update as
            it is used to detect mit-air collisions.
        sync_to_bz:
          type: boolean
          writeOnly: true
          description: Setting sync_to_bz to false disables flaw sync with Bugzilla
            after this operation. Use only as part of bulk actions and trigger a flaw
            bugzilla sync afterwards. Does nothing if BZ is disabled.
      required:
      - alerts
      - created_dt
      - embargoed
      - errata
      - ps_update_stream
      - resolution
      - status
      - type
      - updated_dt
      - uuid
    TrackerReportData:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/TrackerType'
        external_system_id:
          type: string
          maxLength: 100
        status:
          type: string
          maxLength: 100
        resolution:
          type: string
          maxLength: 100
      required:
      - external_system_id
      - type
    TrackerSuggestion:
      type: object
      properties:
        modules_components:
          type: array
          items:
            $ref: '#/components/schemas/ModuleComponent'
        not_applicable:
          type: array
          items:
            $ref: '#/components/schemas/Affect'
      required:
      - modules_components
      - not_applicable
    TrackerType:
      enum:
      - JIRA
      - BUGZILLA
      type: string
  securitySchemes:
    KerberosAuthentication:
      type: http
      scheme: negotiate
      in: header
    OsidbTokenAuthentication:
      type: http
      scheme: bearer
      bearerFormat: JWT
