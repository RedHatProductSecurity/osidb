# Generated by Django 4.2.20 on 2025-05-14 11:12

from celery.utils.log import logging
from django.apps.registry import Apps
from django.db import migrations
from django.db.backends.base.schema import BaseDatabaseSchemaEditor

from osidb.helpers import bypass_rls
from osidb.models.abstract import CVSS


_logger = logging.getLogger(__name__)


@bypass_rls
def upgrade(apps: Apps, schema_editor: BaseDatabaseSchemaEditor):
    FlawCVSS = apps.get_model("osidb", "FlawCVSS")
    to_update = FlawCVSS.objects.filter(
        issuer__in=(CVSS.CVSSIssuer.CVEORG, CVSS.CVSSIssuer.CISA)
    )
    for cvss in to_update:
        cvss_obj = CVSS.CVSS_HANDLES[cvss.version](cvss.vector)
        cvss_score = float(cvss_obj.base_score)
        if cvss.score != cvss_score:
            _logger.warning(
                f"Actual CVSS score and calculated score differ: {cvss.score} != {cvss_score}"
            )
            cvss.score = cvss_score
            cvss.save()


class Migration(migrations.Migration):

    dependencies = [
        ("osidb", "0191_cisa_cvss_data_migration"),
    ]

    operations = [
        migrations.RunPython(upgrade, reverse_code=migrations.RunPython.noop),
    ]
