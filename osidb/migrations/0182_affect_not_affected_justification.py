# Generated by Django 4.2.17 on 2025-02-11 14:27

from django.db import migrations, models
import pgtrigger.compiler
import pgtrigger.migrations


class Migration(migrations.Migration):

    dependencies = [
        ("osidb", "0181_flawcollaborator_relevant_flawcollaborator_type_and_more"),
    ]

    operations = [
        pgtrigger.migrations.RemoveTrigger(
            model_name="affect",
            name="insert_insert",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="affect",
            name="update_update",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="affect",
            name="delete_delete",
        ),
        migrations.AddField(
            model_name="affect",
            name="not_affected_justification",
            field=models.CharField(
                blank=True,
                choices=[
                    ("", "Novalue"),
                    ("Component not present", "Component Not Present"),
                    (
                        "Inline mitigations already exist",
                        "Inline Mitigations Already Exist",
                    ),
                    (
                        "Vulnerable code cannot be controlled by adversary",
                        "Vuln Code Cannot Be Controlled",
                    ),
                    (
                        "Vulnerable code not in execute path",
                        "Vuln Code Not In Execute Path",
                    ),
                    ("Vulnerable code not present", "Vuln Code Not Present"),
                ],
                max_length=100,
            ),
        ),
        migrations.AddField(
            model_name="affectaudit",
            name="not_affected_justification",
            field=models.CharField(
                blank=True,
                choices=[
                    ("", "Novalue"),
                    ("Component not present", "Component Not Present"),
                    (
                        "Inline mitigations already exist",
                        "Inline Mitigations Already Exist",
                    ),
                    (
                        "Vulnerable code cannot be controlled by adversary",
                        "Vuln Code Cannot Be Controlled",
                    ),
                    (
                        "Vulnerable code not in execute path",
                        "Vuln Code Not In Execute Path",
                    ),
                    ("Vulnerable code not present", "Vuln Code Not Present"),
                ],
                max_length=100,
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="affect",
            trigger=pgtrigger.compiler.Trigger(
                name="insert_insert",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "osidb_affectaudit" ("acl_read", "acl_write", "affectedness", "created_dt", "flaw_id", "impact", "last_validated_dt", "not_affected_justification", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "ps_component", "ps_module", "purl", "resolution", "updated_dt", "uuid") VALUES (NEW."acl_read", NEW."acl_write", NEW."affectedness", NEW."created_dt", NEW."flaw_id", NEW."impact", NEW."last_validated_dt", NEW."not_affected_justification", _pgh_attach_context(), NOW(), \'insert\', NEW."uuid", NEW."ps_component", NEW."ps_module", NEW."purl", NEW."resolution", NEW."updated_dt", NEW."uuid"); RETURN NULL;',
                    hash="77de692b01a0a62f83693dd4355e97e4831085fc",  # pragma: allowlist secret
                    operation="INSERT",
                    pgid="pgtrigger_insert_insert_0d1b1",
                    table="osidb_affect",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="affect",
            trigger=pgtrigger.compiler.Trigger(
                name="update_update",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    condition='WHEN (OLD."acl_read" IS DISTINCT FROM (NEW."acl_read") OR OLD."acl_write" IS DISTINCT FROM (NEW."acl_write") OR OLD."affectedness" IS DISTINCT FROM (NEW."affectedness") OR OLD."created_dt" IS DISTINCT FROM (NEW."created_dt") OR OLD."flaw_id" IS DISTINCT FROM (NEW."flaw_id") OR OLD."impact" IS DISTINCT FROM (NEW."impact") OR OLD."last_validated_dt" IS DISTINCT FROM (NEW."last_validated_dt") OR OLD."not_affected_justification" IS DISTINCT FROM (NEW."not_affected_justification") OR OLD."ps_component" IS DISTINCT FROM (NEW."ps_component") OR OLD."ps_module" IS DISTINCT FROM (NEW."ps_module") OR OLD."purl" IS DISTINCT FROM (NEW."purl") OR OLD."resolution" IS DISTINCT FROM (NEW."resolution") OR OLD."updated_dt" IS DISTINCT FROM (NEW."updated_dt") OR OLD."uuid" IS DISTINCT FROM (NEW."uuid"))',
                    func='INSERT INTO "osidb_affectaudit" ("acl_read", "acl_write", "affectedness", "created_dt", "flaw_id", "impact", "last_validated_dt", "not_affected_justification", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "ps_component", "ps_module", "purl", "resolution", "updated_dt", "uuid") VALUES (NEW."acl_read", NEW."acl_write", NEW."affectedness", NEW."created_dt", NEW."flaw_id", NEW."impact", NEW."last_validated_dt", NEW."not_affected_justification", _pgh_attach_context(), NOW(), \'update\', NEW."uuid", NEW."ps_component", NEW."ps_module", NEW."purl", NEW."resolution", NEW."updated_dt", NEW."uuid"); RETURN NULL;',
                    hash="5e72bc3ae11bc14aeaeee3c246edc5b625840124",  # pragma: allowlist secret
                    operation="UPDATE",
                    pgid="pgtrigger_update_update_fdef6",
                    table="osidb_affect",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="affect",
            trigger=pgtrigger.compiler.Trigger(
                name="delete_delete",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "osidb_affectaudit" ("acl_read", "acl_write", "affectedness", "created_dt", "flaw_id", "impact", "last_validated_dt", "not_affected_justification", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "ps_component", "ps_module", "purl", "resolution", "updated_dt", "uuid") VALUES (OLD."acl_read", OLD."acl_write", OLD."affectedness", OLD."created_dt", OLD."flaw_id", OLD."impact", OLD."last_validated_dt", OLD."not_affected_justification", _pgh_attach_context(), NOW(), \'delete\', OLD."uuid", OLD."ps_component", OLD."ps_module", OLD."purl", OLD."resolution", OLD."updated_dt", OLD."uuid"); RETURN NULL;',
                    hash="ab7869823691373ca772688620d8bcc12785857e",  # pragma: allowlist secret
                    operation="DELETE",
                    pgid="pgtrigger_delete_delete_cc8c5",
                    table="osidb_affect",
                    when="AFTER",
                ),
            ),
        ),
    ]
